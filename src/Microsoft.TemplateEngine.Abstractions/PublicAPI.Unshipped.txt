const Microsoft.TemplateEngine.Abstractions.Installer.InstallerConstants.InteractiveModeKey = "Interactive" -> string!
const Microsoft.TemplateEngine.Abstractions.Installer.InstallerConstants.NuGetSourcesKey = "NuGetSources" -> string!
const Microsoft.TemplateEngine.Abstractions.TemplateFiltering.MatchInfo.BuiltIn.Constraint = "Constraint" -> string!
Microsoft.TemplateEngine.Abstractions.Components.IBindSymbolSource
Microsoft.TemplateEngine.Abstractions.Components.IBindSymbolSource.DisplayName.get -> string!
Microsoft.TemplateEngine.Abstractions.Components.IBindSymbolSource.GetBoundValueAsync(Microsoft.TemplateEngine.Abstractions.IEngineEnvironmentSettings! settings, string! bindname, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<string?>!
Microsoft.TemplateEngine.Abstractions.Components.IBindSymbolSource.RequiresPrefixMatch.get -> bool
Microsoft.TemplateEngine.Abstractions.Components.IBindSymbolSource.SourcePrefix.get -> string?
Microsoft.TemplateEngine.Abstractions.Components.ISdkInfoProvider
Microsoft.TemplateEngine.Abstractions.Components.ISdkInfoProvider.GetCurrentVersionAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<string!>!
Microsoft.TemplateEngine.Abstractions.Components.ISdkInfoProvider.GetInstalledVersionsAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<string!>!>!
Microsoft.TemplateEngine.Abstractions.Components.ISdkInfoProvider.ProvideConstraintRemedySuggestion(System.Collections.Generic.IReadOnlyList<string!>! supportedVersions, System.Collections.Generic.IReadOnlyList<string!>! viableInstalledVersions) -> string!
Microsoft.TemplateEngine.Abstractions.Components.IWorkloadsInfoProvider.GetInstalledWorkloadsAsync(System.Threading.CancellationToken token) -> System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<Microsoft.TemplateEngine.Abstractions.Components.WorkloadInfo!>!>!
Microsoft.TemplateEngine.Abstractions.Components.IWorkloadsInfoProvider.ProvideConstraintRemedySuggestion(System.Collections.Generic.IReadOnlyList<string!>! supportedWorkloads) -> string!
Microsoft.TemplateEngine.Abstractions.Components.WorkloadInfo.Description.get -> string!
Microsoft.TemplateEngine.Abstractions.Components.WorkloadInfo.Id.get -> string!
Microsoft.TemplateEngine.Abstractions.Components.WorkloadInfo.WorkloadInfo(string! id, string! description) -> void
Microsoft.TemplateEngine.Abstractions.Constraints.ITemplateConstraint
Microsoft.TemplateEngine.Abstractions.Constraints.ITemplateConstraint.DisplayName.get -> string!
Microsoft.TemplateEngine.Abstractions.Constraints.ITemplateConstraint.Evaluate(string? args) -> Microsoft.TemplateEngine.Abstractions.Constraints.TemplateConstraintResult!
Microsoft.TemplateEngine.Abstractions.Constraints.ITemplateConstraint.Type.get -> string!
Microsoft.TemplateEngine.Abstractions.Constraints.ITemplateConstraintFactory
Microsoft.TemplateEngine.Abstractions.Constraints.ITemplateConstraintFactory.CreateTemplateConstraintAsync(Microsoft.TemplateEngine.Abstractions.IEngineEnvironmentSettings! environmentSettings, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.TemplateEngine.Abstractions.Constraints.ITemplateConstraint!>!
Microsoft.TemplateEngine.Abstractions.Constraints.ITemplateConstraintFactory.Type.get -> string!
Microsoft.TemplateEngine.Abstractions.Components.IWorkloadsInfoProvider
Microsoft.TemplateEngine.Abstractions.Constraints.TemplateConstraintInfo
Microsoft.TemplateEngine.Abstractions.Constraints.TemplateConstraintInfo.Args.get -> string?
Microsoft.TemplateEngine.Abstractions.Constraints.TemplateConstraintInfo.TemplateConstraintInfo(string! type, string? args) -> void
Microsoft.TemplateEngine.Abstractions.Constraints.TemplateConstraintInfo.Type.get -> string!
Microsoft.TemplateEngine.Abstractions.Constraints.TemplateConstraintResult
Microsoft.TemplateEngine.Abstractions.Constraints.TemplateConstraintResult.CallToAction.get -> string?
Microsoft.TemplateEngine.Abstractions.Constraints.TemplateConstraintResult.Constraint.get -> Microsoft.TemplateEngine.Abstractions.Constraints.ITemplateConstraint?
Microsoft.TemplateEngine.Abstractions.Constraints.TemplateConstraintResult.ConstraintType.get -> string!
Microsoft.TemplateEngine.Abstractions.Constraints.TemplateConstraintResult.EvaluationStatus.get -> Microsoft.TemplateEngine.Abstractions.Constraints.TemplateConstraintResult.Status
Microsoft.TemplateEngine.Abstractions.Constraints.TemplateConstraintResult.LocalizedErrorMessage.get -> string?
Microsoft.TemplateEngine.Abstractions.Constraints.TemplateConstraintResult.Status
Microsoft.TemplateEngine.Abstractions.Constraints.TemplateConstraintResult.Status.Allowed = 1 -> Microsoft.TemplateEngine.Abstractions.Constraints.TemplateConstraintResult.Status
Microsoft.TemplateEngine.Abstractions.Constraints.TemplateConstraintResult.Status.NotEvaluated = 0 -> Microsoft.TemplateEngine.Abstractions.Constraints.TemplateConstraintResult.Status
Microsoft.TemplateEngine.Abstractions.Constraints.TemplateConstraintResult.Status.Restricted = 2 -> Microsoft.TemplateEngine.Abstractions.Constraints.TemplateConstraintResult.Status
Microsoft.TemplateEngine.Abstractions.Components.WorkloadInfo
Microsoft.TemplateEngine.Abstractions.EvaluatedPrecedence
Microsoft.TemplateEngine.Abstractions.EvaluatedPrecedence.Disabled = 3 -> Microsoft.TemplateEngine.Abstractions.EvaluatedPrecedence
Microsoft.TemplateEngine.Abstractions.EvaluatedPrecedence.Implicit = 2 -> Microsoft.TemplateEngine.Abstractions.EvaluatedPrecedence
Microsoft.TemplateEngine.Abstractions.EvaluatedPrecedence.Optional = 1 -> Microsoft.TemplateEngine.Abstractions.EvaluatedPrecedence
Microsoft.TemplateEngine.Abstractions.EvaluatedPrecedence.Required = 0 -> Microsoft.TemplateEngine.Abstractions.EvaluatedPrecedence
Microsoft.TemplateEngine.Abstractions.IAllowDefaultIfOptionWithoutValue.DefaultIfOptionWithoutValue.get -> string?
Microsoft.TemplateEngine.Abstractions.IAllowDefaultIfOptionWithoutValue.DefaultIfOptionWithoutValue.set -> void
Microsoft.TemplateEngine.Abstractions.IGenerator.ConvertParameterValueToType(Microsoft.TemplateEngine.Abstractions.IEngineEnvironmentSettings! environmentSettings, Microsoft.TemplateEngine.Abstractions.ITemplateParameter! parameter, string! untypedValue, out bool valueResolutionError) -> object?
Microsoft.TemplateEngine.Abstractions.IGenerator.CreateAsync(Microsoft.TemplateEngine.Abstractions.IEngineEnvironmentSettings! environmentSettings, Microsoft.TemplateEngine.Abstractions.ITemplate! template, Microsoft.TemplateEngine.Abstractions.IParameterSet! parameters, string! targetDirectory, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.TemplateEngine.Abstractions.ICreationResult!>!
Microsoft.TemplateEngine.Abstractions.IGenerator.CreateAsync(Microsoft.TemplateEngine.Abstractions.IEngineEnvironmentSettings! environmentSettings, Microsoft.TemplateEngine.Abstractions.ITemplate! template, Microsoft.TemplateEngine.Abstractions.Parameters.IParameterSetData! parameters, string! targetDirectory, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.TemplateEngine.Abstractions.ICreationResult!>!
Microsoft.TemplateEngine.Abstractions.IGenerator.GetCreationEffectsAsync(Microsoft.TemplateEngine.Abstractions.IEngineEnvironmentSettings! environmentSettings, Microsoft.TemplateEngine.Abstractions.ITemplate! template, Microsoft.TemplateEngine.Abstractions.IParameterSet! parameters, string! targetDirectory, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.TemplateEngine.Abstractions.ICreationEffects!>!
Microsoft.TemplateEngine.Abstractions.IGenerator.GetCreationEffectsAsync(Microsoft.TemplateEngine.Abstractions.IEngineEnvironmentSettings! environmentSettings, Microsoft.TemplateEngine.Abstractions.ITemplate! template, Microsoft.TemplateEngine.Abstractions.Parameters.IParameterSetData! parameters, string! targetDirectory, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.TemplateEngine.Abstractions.ICreationEffects!>!
Microsoft.TemplateEngine.Abstractions.IGenerator.GetParametersForTemplate(Microsoft.TemplateEngine.Abstractions.IEngineEnvironmentSettings! environmentSettings, Microsoft.TemplateEngine.Abstractions.ITemplate! template) -> Microsoft.TemplateEngine.Abstractions.IParameterSet!
Microsoft.TemplateEngine.Abstractions.IGenerator.GetTemplatesAndLangpacksFromDir(Microsoft.TemplateEngine.Abstractions.Mount.IMountPoint! source, out System.Collections.Generic.IList<Microsoft.TemplateEngine.Abstractions.ILocalizationLocator!>! localizations) -> System.Collections.Generic.IList<Microsoft.TemplateEngine.Abstractions.ITemplate!>!
Microsoft.TemplateEngine.Abstractions.IGenerator.TryEvaluateFromString(Microsoft.Extensions.Logging.ILogger! logger, string! text, System.Collections.Generic.IDictionary<string!, object!>! variables, out bool result, out string! evaluationError, System.Collections.Generic.HashSet<string!>? referencedVariablesKeys = null) -> bool
Microsoft.TemplateEngine.Abstractions.IGenerator.TryGetTemplateFromConfigInfo(Microsoft.TemplateEngine.Abstractions.Mount.IFileSystemInfo! config, out Microsoft.TemplateEngine.Abstractions.ITemplate? template, Microsoft.TemplateEngine.Abstractions.Mount.IFileSystemInfo? localeConfig, Microsoft.TemplateEngine.Abstractions.Mount.IFile? hostTemplateConfigFile, string? baselineName = null) -> bool
Microsoft.TemplateEngine.Abstractions.ILocalizationLocator.Author.get -> string!
Microsoft.TemplateEngine.Abstractions.ILocalizationLocator.ConfigPlace.get -> string!
Microsoft.TemplateEngine.Abstractions.ILocalizationLocator.Description.get -> string!
Microsoft.TemplateEngine.Abstractions.ILocalizationLocator.Identity.get -> string!
Microsoft.TemplateEngine.Abstractions.ILocalizationLocator.Locale.get -> string!
Microsoft.TemplateEngine.Abstractions.ILocalizationLocator.Name.get -> string!
Microsoft.TemplateEngine.Abstractions.ILocalizationLocator.ParameterSymbols.get -> System.Collections.Generic.IReadOnlyDictionary<string!, Microsoft.TemplateEngine.Abstractions.IParameterSymbolLocalizationModel!>!
Microsoft.TemplateEngine.Abstractions.IParameterSet.ParameterDefinitions.get -> System.Collections.Generic.IEnumerable<Microsoft.TemplateEngine.Abstractions.ITemplateParameter!>!
Microsoft.TemplateEngine.Abstractions.IParameterSet.ResolvedValues.get -> System.Collections.Generic.IDictionary<Microsoft.TemplateEngine.Abstractions.ITemplateParameter!, object?>!
Microsoft.TemplateEngine.Abstractions.IParameterSet.TryGetParameterDefinition(string! name, out Microsoft.TemplateEngine.Abstractions.ITemplateParameter! parameter) -> bool
Microsoft.TemplateEngine.Abstractions.ITemplateInfo.ParameterDefinitions.get -> Microsoft.TemplateEngine.Abstractions.Parameters.IParameterDefinitionSet!
Microsoft.TemplateEngine.Abstractions.ITemplateParameter.Precedence.get -> Microsoft.TemplateEngine.Abstractions.TemplateParameterPrecedence!
Microsoft.TemplateEngine.Abstractions.Mount.IDirectory.EnumerateDirectories(string! pattern, System.IO.SearchOption searchOption) -> System.Collections.Generic.IEnumerable<Microsoft.TemplateEngine.Abstractions.Mount.IDirectory!>!
Microsoft.TemplateEngine.Abstractions.Mount.IDirectory.EnumerateFiles(string! pattern, System.IO.SearchOption searchOption) -> System.Collections.Generic.IEnumerable<Microsoft.TemplateEngine.Abstractions.Mount.IFile!>!
Microsoft.TemplateEngine.Abstractions.Mount.IDirectory.EnumerateFileSystemInfos(string! pattern, System.IO.SearchOption searchOption) -> System.Collections.Generic.IEnumerable<Microsoft.TemplateEngine.Abstractions.Mount.IFileSystemInfo!>!
Microsoft.TemplateEngine.Abstractions.Mount.IFile.OpenRead() -> System.IO.Stream!
Microsoft.TemplateEngine.Abstractions.Mount.IFileSystemInfo.FullPath.get -> string!
Microsoft.TemplateEngine.Abstractions.Mount.IFileSystemInfo.MountPoint.get -> Microsoft.TemplateEngine.Abstractions.Mount.IMountPoint!
Microsoft.TemplateEngine.Abstractions.Mount.IFileSystemInfo.Name.get -> string!
Microsoft.TemplateEngine.Abstractions.Mount.IFileSystemInfo.Parent.get -> Microsoft.TemplateEngine.Abstractions.Mount.IDirectory?
Microsoft.TemplateEngine.Abstractions.Mount.IMountPoint.DirectoryInfo(string! path) -> Microsoft.TemplateEngine.Abstractions.Mount.IDirectory?
Microsoft.TemplateEngine.Abstractions.Mount.IMountPoint.EnvironmentSettings.get -> Microsoft.TemplateEngine.Abstractions.IEngineEnvironmentSettings!
Microsoft.TemplateEngine.Abstractions.Mount.IMountPoint.FileInfo(string! path) -> Microsoft.TemplateEngine.Abstractions.Mount.IFile?
Microsoft.TemplateEngine.Abstractions.Mount.IMountPoint.FileSystemInfo(string! path) -> Microsoft.TemplateEngine.Abstractions.Mount.IFileSystemInfo?
Microsoft.TemplateEngine.Abstractions.Mount.IMountPoint.MountPointUri.get -> string!
Microsoft.TemplateEngine.Abstractions.Mount.IMountPoint.Root.get -> Microsoft.TemplateEngine.Abstractions.Mount.IDirectory!
Microsoft.TemplateEngine.Abstractions.Mount.IMountPointFactory.TryMount(Microsoft.TemplateEngine.Abstractions.IEngineEnvironmentSettings! environmentSettings, Microsoft.TemplateEngine.Abstractions.Mount.IMountPoint? parent, string! mountPointUri, out Microsoft.TemplateEngine.Abstractions.Mount.IMountPoint? mountPoint) -> bool
Microsoft.TemplateEngine.Abstractions.Mount.IMountPointManager.EnvironmentSettings.get -> Microsoft.TemplateEngine.Abstractions.IEngineEnvironmentSettings!
Microsoft.TemplateEngine.Abstractions.Mount.IMountPointManager.TryDemandMountPoint(string! mountPointUri, out Microsoft.TemplateEngine.Abstractions.Mount.IMountPoint! mountPoint) -> bool
Microsoft.TemplateEngine.Abstractions.Parameters.DataSource
Microsoft.TemplateEngine.Abstractions.Parameters.DataSource.Default = 4 -> Microsoft.TemplateEngine.Abstractions.Parameters.DataSource
Microsoft.TemplateEngine.Abstractions.Parameters.DataSource.DefaultIfNoValue = 5 -> Microsoft.TemplateEngine.Abstractions.Parameters.DataSource
Microsoft.TemplateEngine.Abstractions.Parameters.DataSource.HostDefault = 2 -> Microsoft.TemplateEngine.Abstractions.Parameters.DataSource
Microsoft.TemplateEngine.Abstractions.Parameters.DataSource.HostOnError = 3 -> Microsoft.TemplateEngine.Abstractions.Parameters.DataSource
Microsoft.TemplateEngine.Abstractions.Parameters.DataSource.HostOther = 7 -> Microsoft.TemplateEngine.Abstractions.Parameters.DataSource
Microsoft.TemplateEngine.Abstractions.Parameters.DataSource.NameParameter = 6 -> Microsoft.TemplateEngine.Abstractions.Parameters.DataSource
Microsoft.TemplateEngine.Abstractions.Parameters.DataSource.NoSource = 0 -> Microsoft.TemplateEngine.Abstractions.Parameters.DataSource
Microsoft.TemplateEngine.Abstractions.Parameters.DataSource.User = 1 -> Microsoft.TemplateEngine.Abstractions.Parameters.DataSource
Microsoft.TemplateEngine.Abstractions.Parameters.IParameterDefinitionSet
Microsoft.TemplateEngine.Abstractions.Parameters.IParameterDefinitionSet.AsReadonlyDictionary() -> System.Collections.Generic.IReadOnlyDictionary<string!, Microsoft.TemplateEngine.Abstractions.ITemplateParameter!>!
Microsoft.TemplateEngine.Abstractions.Parameters.IParameterDefinitionSet.ContainsKey(string! key) -> bool
Microsoft.TemplateEngine.Abstractions.Parameters.IParameterDefinitionSet.Keys.get -> System.Collections.Generic.IEnumerable<string!>!
Microsoft.TemplateEngine.Abstractions.Parameters.IParameterDefinitionSet.this[string! key].get -> Microsoft.TemplateEngine.Abstractions.ITemplateParameter!
Microsoft.TemplateEngine.Abstractions.Parameters.IParameterDefinitionSet.TryGetValue(string! key, out Microsoft.TemplateEngine.Abstractions.ITemplateParameter! value) -> bool
Microsoft.TemplateEngine.Abstractions.Parameters.IParameterDefinitionSet.Values.get -> System.Collections.Generic.IEnumerable<Microsoft.TemplateEngine.Abstractions.ITemplateParameter!>!
Microsoft.TemplateEngine.Abstractions.Parameters.IParameterSetData
Microsoft.TemplateEngine.Abstractions.Parameters.IParameterSetData.ParametersDefinition.get -> Microsoft.TemplateEngine.Abstractions.Parameters.IParameterDefinitionSet!
Microsoft.TemplateEngine.Abstractions.Parameters.ParameterData
Microsoft.TemplateEngine.Abstractions.Parameters.ParameterData.DataSource.get -> Microsoft.TemplateEngine.Abstractions.Parameters.DataSource
Microsoft.TemplateEngine.Abstractions.Parameters.ParameterData.IsEnabled.get -> bool
Microsoft.TemplateEngine.Abstractions.Parameters.ParameterData.ParameterData(Microsoft.TemplateEngine.Abstractions.ITemplateParameter! parameterDefinition, object? value, Microsoft.TemplateEngine.Abstractions.Parameters.DataSource source, bool isEnabled = true) -> void
Microsoft.TemplateEngine.Abstractions.Parameters.ParameterData.ParameterDefinition.get -> Microsoft.TemplateEngine.Abstractions.ITemplateParameter!
Microsoft.TemplateEngine.Abstractions.Parameters.ParameterData.Value.get -> object?
Microsoft.TemplateEngine.Abstractions.Parameters.ParameterDefinitionSet
Microsoft.TemplateEngine.Abstractions.Parameters.ParameterDefinitionSet.AsReadonlyDictionary() -> System.Collections.Generic.IReadOnlyDictionary<string!, Microsoft.TemplateEngine.Abstractions.ITemplateParameter!>!
Microsoft.TemplateEngine.Abstractions.Parameters.ParameterDefinitionSet.ContainsKey(string! key) -> bool
Microsoft.TemplateEngine.Abstractions.Parameters.ParameterDefinitionSet.Count.get -> int
Microsoft.TemplateEngine.Abstractions.Parameters.ParameterDefinitionSet.GetEnumerator() -> System.Collections.Generic.IEnumerator<Microsoft.TemplateEngine.Abstractions.ITemplateParameter!>!
Microsoft.TemplateEngine.Abstractions.Parameters.ParameterDefinitionSet.Keys.get -> System.Collections.Generic.IEnumerable<string!>!
Microsoft.TemplateEngine.Abstractions.Parameters.ParameterDefinitionSet.ParameterDefinitionSet(Microsoft.TemplateEngine.Abstractions.Parameters.IParameterDefinitionSet! other) -> void
Microsoft.TemplateEngine.Abstractions.Parameters.ParameterDefinitionSet.ParameterDefinitionSet(System.Collections.Generic.IEnumerable<Microsoft.TemplateEngine.Abstractions.ITemplateParameter!>? parameters) -> void
Microsoft.TemplateEngine.Abstractions.Parameters.ParameterDefinitionSet.ParameterDefinitionSet(System.Collections.Generic.IReadOnlyDictionary<string!, Microsoft.TemplateEngine.Abstractions.ITemplateParameter!>? parameters) -> void
Microsoft.TemplateEngine.Abstractions.Parameters.ParameterDefinitionSet.this[int index].get -> Microsoft.TemplateEngine.Abstractions.ITemplateParameter!
Microsoft.TemplateEngine.Abstractions.Parameters.ParameterDefinitionSet.this[string! key].get -> Microsoft.TemplateEngine.Abstractions.ITemplateParameter!
Microsoft.TemplateEngine.Abstractions.Parameters.ParameterDefinitionSet.TryGetValue(string! key, out Microsoft.TemplateEngine.Abstractions.ITemplateParameter! value) -> bool
Microsoft.TemplateEngine.Abstractions.Parameters.ParameterDefinitionSet.Values.get -> System.Collections.Generic.IEnumerable<Microsoft.TemplateEngine.Abstractions.ITemplateParameter!>!
Microsoft.TemplateEngine.Abstractions.Parameters.ParameterSetData
Microsoft.TemplateEngine.Abstractions.Parameters.ParameterSetData.ContainsKey(Microsoft.TemplateEngine.Abstractions.ITemplateParameter! key) -> bool
Microsoft.TemplateEngine.Abstractions.Parameters.ParameterSetData.Count.get -> int
Microsoft.TemplateEngine.Abstractions.Parameters.ParameterSetData.GetEnumerator() -> System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<Microsoft.TemplateEngine.Abstractions.ITemplateParameter!, Microsoft.TemplateEngine.Abstractions.Parameters.ParameterData!>>!
Microsoft.TemplateEngine.Abstractions.Parameters.ParameterSetData.Keys.get -> System.Collections.Generic.IEnumerable<Microsoft.TemplateEngine.Abstractions.ITemplateParameter!>!
Microsoft.TemplateEngine.Abstractions.Parameters.ParameterSetData.ParametersDefinition.get -> Microsoft.TemplateEngine.Abstractions.Parameters.IParameterDefinitionSet!
Microsoft.TemplateEngine.Abstractions.Parameters.ParameterSetData.ParameterSetData(Microsoft.TemplateEngine.Abstractions.ITemplateInfo! templateInfo) -> void
Microsoft.TemplateEngine.Abstractions.Parameters.ParameterSetData.ParameterSetData(Microsoft.TemplateEngine.Abstractions.ITemplateInfo! templateInfo, System.Collections.Generic.IReadOnlyDictionary<string!, object?>? inputParameters) -> void
Microsoft.TemplateEngine.Abstractions.Parameters.ParameterSetData.ParameterSetData(Microsoft.TemplateEngine.Abstractions.ITemplateInfo! templateInfo, System.Collections.Generic.IReadOnlyDictionary<string!, string?>? inputParameters) -> void
Microsoft.TemplateEngine.Abstractions.Parameters.ParameterSetData.ParameterSetData(Microsoft.TemplateEngine.Abstractions.Parameters.IParameterDefinitionSet! parameters, System.Collections.Generic.IReadOnlyList<Microsoft.TemplateEngine.Abstractions.Parameters.ParameterData!>! parameterData) -> void
Microsoft.TemplateEngine.Abstractions.Parameters.ParameterSetData.this[Microsoft.TemplateEngine.Abstractions.ITemplateParameter! key].get -> Microsoft.TemplateEngine.Abstractions.Parameters.ParameterData!
Microsoft.TemplateEngine.Abstractions.Parameters.ParameterSetData.TryGetValue(Microsoft.TemplateEngine.Abstractions.ITemplateParameter! key, out Microsoft.TemplateEngine.Abstractions.Parameters.ParameterData! value) -> bool
Microsoft.TemplateEngine.Abstractions.Parameters.ParameterSetData.Values.get -> System.Collections.Generic.IEnumerable<Microsoft.TemplateEngine.Abstractions.Parameters.ParameterData!>!
Microsoft.TemplateEngine.Abstractions.PhysicalFileSystem.IFileLastWriteTimeSource.GetLastWriteTimeUtc(string! file) -> System.DateTime
Microsoft.TemplateEngine.Abstractions.PhysicalFileSystem.IFileLastWriteTimeSource.SetLastWriteTimeUtc(string! file, System.DateTime lastWriteTimeUtc) -> void
Microsoft.TemplateEngine.Abstractions.PhysicalFileSystem.IPhysicalFileSystem.PathRelativeTo(string! target, string! relativeTo) -> string!
Microsoft.TemplateEngine.Abstractions.Installer.CheckUpdateResult.LatestVersion.get -> string?
Microsoft.TemplateEngine.Abstractions.Installer.IInstaller.CanInstallAsync(Microsoft.TemplateEngine.Abstractions.Installer.InstallRequest! installationRequest, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<bool>!
Microsoft.TemplateEngine.Abstractions.Installer.IInstaller.Factory.get -> Microsoft.TemplateEngine.Abstractions.Installer.IInstallerFactory!
Microsoft.TemplateEngine.Abstractions.Installer.IInstaller.GetLatestVersionAsync(System.Collections.Generic.IEnumerable<Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackage!>! templatePackages, Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackageProvider! provider, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyList<Microsoft.TemplateEngine.Abstractions.Installer.CheckUpdateResult!>!>!
Microsoft.TemplateEngine.Abstractions.Installer.IInstaller.InstallAsync(Microsoft.TemplateEngine.Abstractions.Installer.InstallRequest! installRequest, Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackageProvider! provider, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.TemplateEngine.Abstractions.Installer.InstallResult!>!
Microsoft.TemplateEngine.Abstractions.Installer.IInstaller.UninstallAsync(Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackage! templatePackage, Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackageProvider! provider, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.TemplateEngine.Abstractions.Installer.UninstallResult!>!
Microsoft.TemplateEngine.Abstractions.Installer.IInstaller.UpdateAsync(Microsoft.TemplateEngine.Abstractions.Installer.UpdateRequest! updateRequest, Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackageProvider! provider, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<Microsoft.TemplateEngine.Abstractions.Installer.UpdateResult!>!
Microsoft.TemplateEngine.Abstractions.Installer.IInstallerFactory.CreateInstaller(Microsoft.TemplateEngine.Abstractions.IEngineEnvironmentSettings! settings, string! installPath) -> Microsoft.TemplateEngine.Abstractions.Installer.IInstaller!
Microsoft.TemplateEngine.Abstractions.Installer.IInstallerFactory.Name.get -> string!
Microsoft.TemplateEngine.Abstractions.Installer.InstallerOperationResult.ErrorMessage.get -> string?
Microsoft.TemplateEngine.Abstractions.Installer.InstallerOperationResult.InstallerOperationResult(Microsoft.TemplateEngine.Abstractions.Installer.InstallerErrorCode error, string? errorMessage, Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackage? templatePackage = null) -> void
Microsoft.TemplateEngine.Abstractions.Installer.InstallerOperationResult.InstallerOperationResult(Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackage! managedTemplatePackage) -> void
Microsoft.TemplateEngine.Abstractions.Installer.InstallRequest.Details.get -> System.Collections.Generic.Dictionary<string!, string!>!
Microsoft.TemplateEngine.Abstractions.Installer.InstallRequest.DisplayName.get -> string!
Microsoft.TemplateEngine.Abstractions.Installer.InstallRequest.Force.get -> bool
Microsoft.TemplateEngine.Abstractions.Installer.InstallRequest.InstallerName.get -> string?
Microsoft.TemplateEngine.Abstractions.Installer.InstallRequest.InstallRequest(string! identifier, string? version = null, string? installerName = null, System.Collections.Generic.Dictionary<string!, string!>? details = null, bool force = false) -> void
Microsoft.TemplateEngine.Abstractions.Installer.InstallRequest.PackageIdentifier.get -> string!
Microsoft.TemplateEngine.Abstractions.Installer.InstallRequest.Version.get -> string?
Microsoft.TemplateEngine.Abstractions.Installer.InstallResult.InstallRequest.get -> Microsoft.TemplateEngine.Abstractions.Installer.InstallRequest!
Microsoft.TemplateEngine.Abstractions.Installer.ISerializableInstaller.Deserialize(Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackageProvider! provider, Microsoft.TemplateEngine.Abstractions.Installer.TemplatePackageData! data) -> Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackage!
Microsoft.TemplateEngine.Abstractions.Installer.ISerializableInstaller.Serialize(Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackage! templatePackage) -> Microsoft.TemplateEngine.Abstractions.Installer.TemplatePackageData!
Microsoft.TemplateEngine.Abstractions.Installer.UpdateRequest.TemplatePackage.get -> Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackage!
Microsoft.TemplateEngine.Abstractions.Installer.UpdateRequest.UpdateRequest(Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackage! templatePackage, string! targetVersion) -> void
Microsoft.TemplateEngine.Abstractions.Installer.UpdateRequest.Version.get -> string!
Microsoft.TemplateEngine.Abstractions.Installer.UpdateResult.UpdateRequest.get -> Microsoft.TemplateEngine.Abstractions.Installer.UpdateRequest!
Microsoft.TemplateEngine.Abstractions.ISearchPackFilter.ShouldPackBeFiltered(string! candidatePackName, string! candidatePackVersion) -> bool
Microsoft.TemplateEngine.Abstractions.ISettingsLoader.AddMountPoint(Microsoft.TemplateEngine.Abstractions.Mount.IMountPoint! mountPoint) -> void
Microsoft.TemplateEngine.Abstractions.ISettingsLoader.AddProbingPath(string! probeIn) -> void
Microsoft.TemplateEngine.Abstractions.ISettingsLoader.Components.get -> Microsoft.TemplateEngine.Abstractions.IComponentManager!
Microsoft.TemplateEngine.Abstractions.ISettingsLoader.EnvironmentSettings.get -> Microsoft.TemplateEngine.Abstractions.IEngineEnvironmentSettings!
Microsoft.TemplateEngine.Abstractions.ISettingsLoader.FindBestHostTemplateConfigFile(Microsoft.TemplateEngine.Abstractions.Mount.IFileSystemInfo! config) -> Microsoft.TemplateEngine.Abstractions.Mount.IFile!
Microsoft.TemplateEngine.Abstractions.ISettingsLoader.GetTemplates(System.Collections.Generic.HashSet<Microsoft.TemplateEngine.Abstractions.ITemplateInfo!>! templates) -> void
Microsoft.TemplateEngine.Abstractions.ISettingsLoader.LoadTemplate(Microsoft.TemplateEngine.Abstractions.ITemplateInfo! info, string! baselineName) -> Microsoft.TemplateEngine.Abstractions.ITemplate!
Microsoft.TemplateEngine.Abstractions.ISettingsLoader.MountPoints.get -> System.Collections.Generic.IEnumerable<object!>!
Microsoft.TemplateEngine.Abstractions.ISettingsLoader.ReleaseMountPoint(Microsoft.TemplateEngine.Abstractions.Mount.IMountPoint! mountPoint) -> void
Microsoft.TemplateEngine.Abstractions.ISettingsLoader.RemoveMountPoint(Microsoft.TemplateEngine.Abstractions.Mount.IMountPoint! mountPoint) -> void
Microsoft.TemplateEngine.Abstractions.ISettingsLoader.RemoveMountPoints(System.Collections.Generic.IEnumerable<System.Guid>! mountPoints) -> void
Microsoft.TemplateEngine.Abstractions.ISettingsLoader.TryGetFileFromIdAndPath(System.Guid mountPointId, string! place, out Microsoft.TemplateEngine.Abstractions.Mount.IFile! file, out Microsoft.TemplateEngine.Abstractions.Mount.IMountPoint! mountPoint) -> bool
Microsoft.TemplateEngine.Abstractions.ISettingsLoader.TryGetMountPointFromPlace(string! mountPointPlace, out Microsoft.TemplateEngine.Abstractions.Mount.IMountPoint! mountPoint) -> bool
Microsoft.TemplateEngine.Abstractions.ISettingsLoader.TryGetMountPointInfo(System.Guid mountPointId, out object! info) -> bool
Microsoft.TemplateEngine.Abstractions.ISettingsLoader.WriteTemplateCache(System.Collections.Generic.IList<Microsoft.TemplateEngine.Abstractions.ITemplateInfo!>! templates, string! locale) -> void
Microsoft.TemplateEngine.Abstractions.ISettingsLoader.WriteTemplateCache(System.Collections.Generic.IList<Microsoft.TemplateEngine.Abstractions.ITemplateInfo!>! templates, string! locale, bool hasContentChanges) -> void
Microsoft.TemplateEngine.Abstractions.IShortNameList.ShortNameList.get -> System.Collections.Generic.IReadOnlyList<string!>!
Microsoft.TemplateEngine.Abstractions.ISimpleConfigModifiers.BaselineName.get -> string!
Microsoft.TemplateEngine.Abstractions.ITemplate.Configuration.get -> Microsoft.TemplateEngine.Abstractions.Mount.IFileSystemInfo!
Microsoft.TemplateEngine.Abstractions.ITemplate.Generator.get -> Microsoft.TemplateEngine.Abstractions.IGenerator!
Microsoft.TemplateEngine.Abstractions.ITemplate.LocaleConfiguration.get -> Microsoft.TemplateEngine.Abstractions.Mount.IFileSystemInfo?
Microsoft.TemplateEngine.Abstractions.ITemplate.TemplateSourceRoot.get -> Microsoft.TemplateEngine.Abstractions.Mount.IDirectory?
Microsoft.TemplateEngine.Abstractions.ITemplateEngineHost.OnParameterError(Microsoft.TemplateEngine.Abstractions.ITemplateParameter! parameter, string! receivedValue, string! message, out string? newValue) -> bool
Microsoft.TemplateEngine.Abstractions.ITemplateParameter.AllowMultipleValues.get -> bool
Microsoft.TemplateEngine.Abstractions.ITemplateInfo.Constraints.get -> System.Collections.Generic.IReadOnlyList<Microsoft.TemplateEngine.Abstractions.Constraints.TemplateConstraintInfo!>!
Microsoft.TemplateEngine.Abstractions.ITemplateInfo.PostActions.get -> System.Collections.Generic.IReadOnlyList<System.Guid>!
Microsoft.TemplateEngine.Abstractions.PrecedenceDefinition
Microsoft.TemplateEngine.Abstractions.PrecedenceDefinition.ConditionalyDisabled = 4 -> Microsoft.TemplateEngine.Abstractions.PrecedenceDefinition
Microsoft.TemplateEngine.Abstractions.PrecedenceDefinition.ConditionalyRequired = 1 -> Microsoft.TemplateEngine.Abstractions.PrecedenceDefinition
Microsoft.TemplateEngine.Abstractions.PrecedenceDefinition.Disabled = 5 -> Microsoft.TemplateEngine.Abstractions.PrecedenceDefinition
Microsoft.TemplateEngine.Abstractions.PrecedenceDefinition.Implicit = 3 -> Microsoft.TemplateEngine.Abstractions.PrecedenceDefinition
Microsoft.TemplateEngine.Abstractions.PrecedenceDefinition.Optional = 2 -> Microsoft.TemplateEngine.Abstractions.PrecedenceDefinition
Microsoft.TemplateEngine.Abstractions.PrecedenceDefinition.Required = 0 -> Microsoft.TemplateEngine.Abstractions.PrecedenceDefinition
Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackage.DisplayName.get -> string!
Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackage.GetDetails() -> System.Collections.Generic.IReadOnlyDictionary<string!, string!>!
Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackage.Identifier.get -> string!
Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackage.Installer.get -> Microsoft.TemplateEngine.Abstractions.Installer.IInstaller!
Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackage.IsLocalPackage.get -> bool
Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackage.ManagedProvider.get -> Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackageProvider!
Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackage.Version.get -> string?
Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackageProvider.GetLatestVersionsAsync(System.Collections.Generic.IEnumerable<Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackage!>! templatePackages, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyList<Microsoft.TemplateEngine.Abstractions.Installer.CheckUpdateResult!>!>!
Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackageProvider.InstallAsync(System.Collections.Generic.IEnumerable<Microsoft.TemplateEngine.Abstractions.Installer.InstallRequest!>! installRequests, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyList<Microsoft.TemplateEngine.Abstractions.Installer.InstallResult!>!>!
Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackageProvider.UninstallAsync(System.Collections.Generic.IEnumerable<Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackage!>! templatePackages, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyList<Microsoft.TemplateEngine.Abstractions.Installer.UninstallResult!>!>!
Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackageProvider.UpdateAsync(System.Collections.Generic.IEnumerable<Microsoft.TemplateEngine.Abstractions.Installer.UpdateRequest!>! updateRequests, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyList<Microsoft.TemplateEngine.Abstractions.Installer.UpdateResult!>!>!
Microsoft.TemplateEngine.Abstractions.TemplatePackage.ITemplatePackage.MountPointUri.get -> string!
Microsoft.TemplateEngine.Abstractions.TemplatePackage.ITemplatePackage.Provider.get -> Microsoft.TemplateEngine.Abstractions.TemplatePackage.ITemplatePackageProvider!
Microsoft.TemplateEngine.Abstractions.TemplatePackage.ITemplatePackageProvider.Factory.get -> Microsoft.TemplateEngine.Abstractions.TemplatePackage.ITemplatePackageProviderFactory!
Microsoft.TemplateEngine.Abstractions.TemplatePackage.ITemplatePackageProvider.GetAllTemplatePackagesAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyList<Microsoft.TemplateEngine.Abstractions.TemplatePackage.ITemplatePackage!>!>!
Microsoft.TemplateEngine.Abstractions.TemplatePackage.ITemplatePackageProviderFactory.CreateProvider(Microsoft.TemplateEngine.Abstractions.IEngineEnvironmentSettings! settings) -> Microsoft.TemplateEngine.Abstractions.TemplatePackage.ITemplatePackageProvider!
Microsoft.TemplateEngine.Abstractions.TemplatePackage.ITemplatePackageProviderFactory.DisplayName.get -> string!
Microsoft.TemplateEngine.Abstractions.TemplatePackage.TemplatePackage.MountPointUri.get -> string!
Microsoft.TemplateEngine.Abstractions.TemplatePackage.TemplatePackage.Provider.get -> Microsoft.TemplateEngine.Abstractions.TemplatePackage.ITemplatePackageProvider!
Microsoft.TemplateEngine.Abstractions.TemplatePackage.TemplatePackage.TemplatePackage(Microsoft.TemplateEngine.Abstractions.TemplatePackage.ITemplatePackageProvider! provider, string! mountPointUri, System.DateTime lastChangeTime) -> void
Microsoft.TemplateEngine.Abstractions.TemplateParameterPrecedence
Microsoft.TemplateEngine.Abstractions.TemplateParameterPrecedence.CanBeRequired.get -> bool
Microsoft.TemplateEngine.Abstractions.TemplateParameterPrecedence.IsEnabledCondition.get -> string?
Microsoft.TemplateEngine.Abstractions.TemplateParameterPrecedence.IsRequired.get -> bool
Microsoft.TemplateEngine.Abstractions.TemplateParameterPrecedence.IsRequiredCondition.get -> string?
Microsoft.TemplateEngine.Abstractions.TemplateParameterPrecedence.PrecedenceDefinition.get -> Microsoft.TemplateEngine.Abstractions.PrecedenceDefinition
Microsoft.TemplateEngine.Abstractions.TemplateParameterPrecedence.TemplateParameterPrecedence(Microsoft.TemplateEngine.Abstractions.PrecedenceDefinition precedenceDefinition, string? isRequiredCondition = null, string? isEnabledCondition = null, bool isRequired = false) -> void
Microsoft.TemplateEngine.Abstractions.TemplateParameterPrecedenceExtensions
override Microsoft.TemplateEngine.Abstractions.Installer.CheckUpdateResult.TemplatePackage.get -> Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackage!
override Microsoft.TemplateEngine.Abstractions.Installer.UninstallResult.TemplatePackage.get -> Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackage!
override Microsoft.TemplateEngine.Abstractions.Parameters.ParameterData.ToString() -> string!
static Microsoft.TemplateEngine.Abstractions.Constraints.TemplateConstraintResult.CreateAllowed(Microsoft.TemplateEngine.Abstractions.Constraints.ITemplateConstraint! constraint) -> Microsoft.TemplateEngine.Abstractions.Constraints.TemplateConstraintResult!
static Microsoft.TemplateEngine.Abstractions.Constraints.TemplateConstraintResult.CreateEvaluationFailure(Microsoft.TemplateEngine.Abstractions.Constraints.ITemplateConstraint! constraint, string! localizedErrorMessage, string? cta = null) -> Microsoft.TemplateEngine.Abstractions.Constraints.TemplateConstraintResult!
static Microsoft.TemplateEngine.Abstractions.Constraints.TemplateConstraintResult.CreateInitializationFailure(string! type, string! localizedErrorMessage, string? cta = null) -> Microsoft.TemplateEngine.Abstractions.Constraints.TemplateConstraintResult!
static Microsoft.TemplateEngine.Abstractions.Constraints.TemplateConstraintResult.CreateRestricted(Microsoft.TemplateEngine.Abstractions.Constraints.ITemplateConstraint! constraint, string! localizedErrorMessage, string? cta = null) -> Microsoft.TemplateEngine.Abstractions.Constraints.TemplateConstraintResult!
static Microsoft.TemplateEngine.Abstractions.Installer.CheckUpdateResult.CreateFailure(Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackage! templatePackage, Microsoft.TemplateEngine.Abstractions.Installer.InstallerErrorCode error, string! localizedFailureMessage) -> Microsoft.TemplateEngine.Abstractions.Installer.CheckUpdateResult!
static Microsoft.TemplateEngine.Abstractions.Installer.CheckUpdateResult.CreateSuccess(Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackage! templatePackage, string? version, bool isLatest) -> Microsoft.TemplateEngine.Abstractions.Installer.CheckUpdateResult!
static Microsoft.TemplateEngine.Abstractions.Installer.InstallResult.CreateFailure(Microsoft.TemplateEngine.Abstractions.Installer.InstallRequest! request, Microsoft.TemplateEngine.Abstractions.Installer.InstallerErrorCode error, string! localizedFailureMessage) -> Microsoft.TemplateEngine.Abstractions.Installer.InstallResult!
static Microsoft.TemplateEngine.Abstractions.Installer.InstallResult.CreateSuccess(Microsoft.TemplateEngine.Abstractions.Installer.InstallRequest! request, Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackage! templatePackage) -> Microsoft.TemplateEngine.Abstractions.Installer.InstallResult!
static Microsoft.TemplateEngine.Abstractions.Installer.UninstallResult.CreateFailure(Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackage! templatePackage, Microsoft.TemplateEngine.Abstractions.Installer.InstallerErrorCode error, string! localizedFailureMessage) -> Microsoft.TemplateEngine.Abstractions.Installer.UninstallResult!
static Microsoft.TemplateEngine.Abstractions.Installer.UninstallResult.CreateSuccess(Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackage! templatePackage) -> Microsoft.TemplateEngine.Abstractions.Installer.UninstallResult!
static Microsoft.TemplateEngine.Abstractions.Installer.UpdateResult.CreateFailure(Microsoft.TemplateEngine.Abstractions.Installer.UpdateRequest! request, Microsoft.TemplateEngine.Abstractions.Installer.InstallerErrorCode error, string! localizedFailureMessage) -> Microsoft.TemplateEngine.Abstractions.Installer.UpdateResult!
static Microsoft.TemplateEngine.Abstractions.Installer.UpdateResult.CreateSuccess(Microsoft.TemplateEngine.Abstractions.Installer.UpdateRequest! request, Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackage! templatePackage) -> Microsoft.TemplateEngine.Abstractions.Installer.UpdateResult!
static Microsoft.TemplateEngine.Abstractions.Installer.UpdateResult.FromInstallResult(Microsoft.TemplateEngine.Abstractions.Installer.UpdateRequest! request, Microsoft.TemplateEngine.Abstractions.Installer.InstallResult! installResult) -> Microsoft.TemplateEngine.Abstractions.Installer.UpdateResult!
static Microsoft.TemplateEngine.Abstractions.TemplateParameterPrecedenceExtensions.ToPrecedenceDefinition(this Microsoft.TemplateEngine.Abstractions.TemplateParameterPriority priority) -> Microsoft.TemplateEngine.Abstractions.PrecedenceDefinition
static Microsoft.TemplateEngine.Abstractions.TemplateParameterPrecedenceExtensions.ToTemplateParameterPrecedence(this Microsoft.TemplateEngine.Abstractions.TemplateParameterPriority priority) -> Microsoft.TemplateEngine.Abstractions.TemplateParameterPrecedence!
static Microsoft.TemplateEngine.Abstractions.TemplateParameterPrecedenceExtensions.ToTemplateParameterPriority(this Microsoft.TemplateEngine.Abstractions.PrecedenceDefinition precedenceDefinition) -> Microsoft.TemplateEngine.Abstractions.TemplateParameterPriority
static readonly Microsoft.TemplateEngine.Abstractions.Parameters.ParameterDefinitionSet.Empty -> Microsoft.TemplateEngine.Abstractions.Parameters.IParameterDefinitionSet!
static readonly Microsoft.TemplateEngine.Abstractions.TemplateParameterPrecedence.Default -> Microsoft.TemplateEngine.Abstractions.TemplateParameterPrecedence!
virtual Microsoft.TemplateEngine.Abstractions.Installer.InstallerOperationResult.TemplatePackage.get -> Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackage?
override Microsoft.TemplateEngine.Abstractions.Installer.InstallRequest.ToString() -> string!

<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ConditionEvaluation_Error_CyclicDependency" xml:space="preserve">
    <value>Parameter conditions contain cyclic dependency: [{0}] that is preventing deterministic evaluation.</value>
    <comment>{0} is the dependency chain</comment>
  </data>
  <data name="ConditionEvaluation_Error_MismatchedCondition" xml:space="preserve">
    <value>Failed to evaluate condition {0} on parameter {1} (condition text: {2}, evaluation error: {3}) - condition might be malformed or referenced parameters do not have default nor explicit values.</value>
    <comment>{0} is the condition type
{1} is parameter name
{2} is condition text
{3} is evaluation error message</comment>
  </data>
  <data name="ConditionEvaluation_Error_TopologicalSort" xml:space="preserve">
    <value>Unexpected internal error - unable to perform topological sort of parameter dependencies that do not appear to have a cyclic dependencies.</value>
  </data>
  <data name="ConditionEvaluation_Warning_CyclicDependency" xml:space="preserve">
    <value>Parameter conditions contain cyclic dependency: [{0}]. With current values of parameters it's possible to deterministically evaluate parameters - so proceeding further. However template should be reviewed as instantiation with different parameters can lead to error.</value>
    <comment>{0} is the dependency chain</comment>
  </data>
  <data name="Constaint_Error_ArgumentHasEmptyString" xml:space="preserve">
    <value>'{0}' should not contain empty items</value>
    <comment>{0} is JSON configuration for constraint</comment>
  </data>
  <data name="Constraint_Error_ArgumentsNotSpecified" xml:space="preserve">
    <value>Argument(s) were not specified. At least one argument should be specified.</value>
  </data>
  <data name="Constraint_Error_ArrayHasNoObjects" xml:space="preserve">
    <value>'{0}' does not contain valid items.</value>
    <comment>{0} is JSON configuration for constraint</comment>
  </data>
  <data name="Constraint_Error_InvalidJson" xml:space="preserve">
    <value>'{0}' is not a valid JSON.</value>
    <comment>{0} is JSON configuration for constraint</comment>
  </data>
  <data name="Constraint_Error_InvalidJsonArray_Objects" xml:space="preserve">
    <value>'{0}' should be an array of objects.</value>
    <comment>{0} is JSON configuration for constraint</comment>
  </data>
  <data name="Constraint_Error_InvalidJsonType_Array" xml:space="preserve">
    <value>'{0}' is not a valid JSON array.</value>
    <comment>{0} is JSON configuration for constraint</comment>
  </data>
  <data name="Constraint_Error_InvalidJsonType_StringOrArray" xml:space="preserve">
    <value>'{0}' is not a valid JSON string or array.</value>
    <comment>{0} is JSON configuration for constraint</comment>
  </data>
  <data name="Constraint_Error_InvalidVersion" xml:space="preserve">
    <value>'{0}' is not a valid version or version range.</value>
    <comment>{0} is version range specified in JSON configuration</comment>
  </data>
  <data name="Constraint_WrongConfigurationCTA" xml:space="preserve">
    <value>Check the constraint configuration in template.json.</value>
  </data>
  <data name="EnvironmentVariablesBindSource_Name" xml:space="preserve">
    <value>Environment variables</value>
  </data>
  <data name="EvaluatedInputDataSet_Error_MismatchedConditions" xml:space="preserve">
    <value>Attempt to pass result of external evaluation of parameters conditions for parameter(s) that do not have appropriate condition set in template (IsEnabled or IsRequired attributes not populated with condition) or a failure to pass the condition results for parameters with condition(s) in template. Offending parameters: {0}.</value>
  </data>
  <data name="EvaluatedInputParameterData_Error_ConditionsInvalid" xml:space="preserve">
    <value>Attempt to pass result of external evaluation of parameters conditions for parameter(s) that do not have appropriate condition set in template (IsEnabled or IsRequired attributes not populated with condition) or a failure to pass the condition results for parameters with condition(s) in template. Offending parameter(s): {0}.</value>
  </data>
  <data name="FolderInstaller_InstallResult_Error_FolderDoesNotExist" xml:space="preserve">
    <value>The folder {0} doesn't exist.</value>
  </data>
  <data name="Generic_Constraint_WrongConfigurationCTA" xml:space="preserve">
    <value>Check the constraint configuration in template.json.</value>
  </data>
  <data name="Generic_LatestVersion" xml:space="preserve">
    <value>latest version</value>
    <comment>small letters, string is used in the sentence</comment>
  </data>
  <data name="Generic_Version" xml:space="preserve">
    <value>version {0}</value>
    <comment>small letters, string is used in the sentence</comment>
  </data>
  <data name="GlobalSettingsTemplatePackageProvider_InstallResult_Error_MultipleInstallersCanBeUsed" xml:space="preserve">
    <value>{0} can be installed by several installers. Specify the installer name to be used.</value>
  </data>
  <data name="GlobalSettingsTemplatePackageProvider_InstallResult_Error_PackageAlreadyInstalled" xml:space="preserve">
    <value>{0} is already installed.</value>
  </data>
  <data name="GlobalSettingsTemplatePackageProvider_InstallResult_Error_PackageCannotBeInstalled" xml:space="preserve">
    <value>{0} cannot be installed.</value>
  </data>
  <data name="GlobalSettingsTemplatePackagesProvider_Info_PackageAlreadyInstalled" xml:space="preserve">
    <value>{0} is already installed, it will be replaced with {1}.</value>
  </data>
  <data name="GlobalSettingsTemplatePackagesProvider_Info_PackageUninstalled" xml:space="preserve">
    <value>{0} was successfully uninstalled.</value>
  </data>
  <data name="HostConstraint_Error_MissingMandatoryProperty" xml:space="preserve">
    <value>'{0}' does not have mandatory property '{1}'.</value>
    <comment>{0} is JSON configuration, {1} mandatory JSON property name</comment>
  </data>
  <data name="HostConstraint_Message_Restricted" xml:space="preserve">
    <value>Running template on {0} (version: {1}) is not supported, supported hosts is/are: {2}.</value>
    <comment>{0} - host name ("dotnetcli", "ide"..)
{1} - host version (usually matches VS or SDK version)
{2} - comma-separated list of supported hosts and their versions (example: host1, host2(1.0.0), host3([1.0.0-*]))</comment>
  </data>
  <data name="HostConstraint_Name" xml:space="preserve">
    <value>Template engine host</value>
  </data>
  <data name="HostParametersBindSource_Name" xml:space="preserve">
    <value>Host defined parameters</value>
  </data>
  <data name="NuGetApiPackageManager_Error_FailedToLoadSource" xml:space="preserve">
    <value>Failed to load the NuGet source {0}.</value>
  </data>
  <data name="NuGetApiPackageManager_Error_FailedToLoadSources" xml:space="preserve">
    <value>Failed to load NuGet sources configured for the folder {0}.</value>
  </data>
  <data name="NuGetApiPackageManager_Error_FailedToReadPackage" xml:space="preserve">
    <value>Failed to read package information from NuGet source {0}.</value>
  </data>
  <data name="NuGetApiPackageManager_Error_FileAlreadyExists" xml:space="preserve">
    <value>File {0} already exists.</value>
  </data>
  <data name="NuGetApiPackageManager_Error_NoSources" xml:space="preserve">
    <value>No NuGet sources are defined or enabled.</value>
  </data>
  <data name="NuGetApiPackageManager_Warning_FailedToDelete" xml:space="preserve">
    <value>Failed to remove {0} after failed download. Remove the file manually if it exists.</value>
  </data>
  <data name="NuGetApiPackageManager_Warning_FailedToDownload" xml:space="preserve">
    <value>Failed to download {0} from NuGet feed {1}.</value>
  </data>
  <data name="NuGetApiPackageManager_Warning_FailedToLoadSource" xml:space="preserve">
    <value>Failed to load NuGet source {0}: the source is not valid. It will be skipped in further processing.</value>
  </data>
  <data name="NuGetApiPackageManager_Warning_PackageNotFound" xml:space="preserve">
    <value>{0} is not found in NuGet feeds {1}.</value>
  </data>
  <data name="NuGetInstaller_Error_CopyFailed" xml:space="preserve">
    <value>Failed to copy package {0} to {1}.</value>
  </data>
  <data name="NuGetInstaller_Error_FailedToReadPackage" xml:space="preserve">
    <value>Failed to read content of package {0}.</value>
  </data>
  <data name="NuGetInstaller_Error_FileAlreadyExists" xml:space="preserve">
    <value>File {0} already exists.</value>
  </data>
  <data name="NuGetInstaller_InstallResut_Error_DownloadFailed" xml:space="preserve">
    <value>Failed to download {0} from {1}.</value>
  </data>
  <data name="NuGetInstaller_InstallResut_Error_InstallGeneric" xml:space="preserve">
    <value>Failed to install the package {0}.
Details: {1}.</value>
  </data>
  <data name="NuGetInstaller_InstallResut_Error_InstallRequestNotSupported" xml:space="preserve">
    <value>The install request {0} cannot be processed by installer {1}.</value>
  </data>
  <data name="NuGetInstaller_InstallResut_Error_InvalidPackage" xml:space="preserve">
    <value>The NuGet package {0} is invalid.</value>
  </data>
  <data name="NuGetInstaller_InstallResut_Error_InvalidSources" xml:space="preserve">
    <value>The configured NuGet sources are invalid: {0}.</value>
  </data>
  <data name="NuGetInstaller_InstallResut_Error_InvalidSources_None" xml:space="preserve">
    <value>No NuGet sources are configured.</value>
  </data>
  <data name="NuGetInstaller_InstallResut_Error_OperationCancelled" xml:space="preserve">
    <value>The operation was cancelled.</value>
  </data>
  <data name="NuGetInstaller_InstallResut_Error_PackageNotFound" xml:space="preserve">
    <value>{0} was not found in NuGet feeds {1}.</value>
  </data>
  <data name="NuGetInstaller_InstallResut_Error_PackageNotSupported" xml:space="preserve">
    <value>The package {0} is not supported by installer {1}.</value>
  </data>
  <data name="NuGetInstaller_InstallResut_Error_UninstallGeneric" xml:space="preserve">
    <value>Failed to uninstall the package {0}.
Details: {1}.</value>
  </data>
  <data name="NuGetInstaller_InstallResut_Error_UpdateCheckGeneric" xml:space="preserve">
    <value>Failed to check the update for the package {0}.
Details: {1}.</value>
  </data>
  <data name="OSConstraint_Error_InvalidOSName" xml:space="preserve">
    <value>'{0}' is not a valid operating system name. Allowed values are: {1}.</value>
    <comment>{0} - OS name in configuration
{1} - comma-separated list of allowed operating system names</comment>
  </data>
  <data name="OSConstraint_Message_Restricted" xml:space="preserve">
    <value>Running template on {0} is not supported, supported OS is/are: {1}.</value>
    <comment>{0} - name of the executing operating system, {1} - comma separated list of supported operating systems.</comment>
  </data>
  <data name="OSConstraint_Name" xml:space="preserve">
    <value>Operating System</value>
    <comment>this is name of constraint that will appear in the UI</comment>
  </data>
  <data name="Scanner_Error_TemplatePackageLocationIsNotSupported" xml:space="preserve">
    <value>Template package location {0} is not supported, or doesn't exist.</value>
  </data>
  <data name="SdkConstraint_Error_InvalidVersion" xml:space="preserve">
    <value>'{0}' is not a valid semver version.</value>
    <comment>{0} is the provided version</comment>
  </data>
  <data name="SdkConstraint_Error_MismatchedProviders" xml:space="preserve">
    <value>Multiple 'ISdkInfoProvider' components provided by host ({0}), therefore 'SdkVersionConstraint' cannot be properly initialized.</value>
    <comment>{0} is the list of providers</comment>
  </data>
  <data name="SdkConstraint_Error_MissingProvider" xml:space="preserve">
    <value>No 'ISdkInfoProvider' component provided by host. 'SdkVersionConstraint' cannot be properly initialized.</value>
  </data>
  <data name="SdkConstraint_Message_Restricted" xml:space="preserve">
    <value>Running template on current .NET SDK version ({0}) is unsupported. Supported version(s): {1}</value>
    <comment>{0} is the current SDK version, {1} is the list of supported SDK versions</comment>
  </data>
  <data name="SdkVersionConstraint_Name" xml:space="preserve">
    <value>.NET SDK version</value>
  </data>
  <data name="TemplateConstraintManager_Error_FailedToEvaluate" xml:space="preserve">
    <value>The constraint '{0}' failed to be evaluated for the args '{1}', details: {2}</value>
    <comment>{0} - constraint type
{1} - arguments (in JSON format)
{2} - reason of failure (has the period).</comment>
  </data>
  <data name="TemplateConstraintManager_Error_FailedToInitialize" xml:space="preserve">
    <value>The constraint '{0}' failed to initialize: {1}</value>
    <comment>{0} is constraint type
{1} - reason of failure (has the period).</comment>
  </data>
  <data name="TemplateConstraintManager_Error_UnknownType" xml:space="preserve">
    <value>The constraint '{0}' is unknown.</value>
    <comment>{0} is constraint type</comment>
  </data>
  <data name="TemplateCreator_TemplateCreationResult_Error_CouldNotLoadTemplate" xml:space="preserve">
    <value>Could not load template.</value>
  </data>
  <data name="TemplateCreator_TemplateCreationResult_Error_CreationFailed" xml:space="preserve">
    <value>Failed to create template.
Details: {0}</value>
  </data>
  <data name="TemplateCreator_TemplateCreationResult_Error_DestructiveChanges" xml:space="preserve">
    <value>Destructive changes detected.</value>
  </data>
  <data name="TemplateInfo_Warning_FailedToReadHostData" xml:space="preserve">
    <value>Failed to load host data in {0} at {1}.</value>
    <comment>{0} - path to template location, {1} relative path inside template location.</comment>
  </data>
  <data name="TemplatePackageManager_Error_FailedToGetTemplatePackages" xml:space="preserve">
    <value>Failed to retrieve template packages from provider '{0}'.
Details: {1}</value>
    <comment>{0} - provider name (not localized). Last line should not end with a period - period is already included in {1}.</comment>
  </data>
  <data name="TemplatePackageManager_Error_FailedToScan" xml:space="preserve">
    <value>Failed to scan {0}.
Details: {1}</value>
    <comment>last line should not end with a period, period is a part of the format entry</comment>
  </data>
  <data name="TemplatePackageManager_Error_FailedToStoreCache" xml:space="preserve">
    <value>Failed to store template cache, details: {0}
Template cache will be recreated on the next run.</value>
    <comment>{0} should not end with period - period is a part of the format entry.</comment>
  </data>
  <data name="WorkloadConstraint_Error_MismatchedProviders" xml:space="preserve">
    <value>Multiple 'IWorkloadsInfoProvider' components provided by host ({0}), therefore 'WorkloadConstraint' cannot be properly initialized.</value>
    <comment>{0} is list of ids of providers</comment>
  </data>
  <data name="WorkloadConstraint_Error_MissingProvider" xml:space="preserve">
    <value>No 'IWorkloadsInfoProvider' component provided by host. 'WorkloadConstraint' cannot be properly initialized.</value>
  </data>
  <data name="WorkloadConstraint_Message_Restricted" xml:space="preserve">
    <value>Running template is not supported - required optional workload(s) not installed. Supported workload(s): {0}. Currently installed optional workloads: {1}</value>
    <comment>{0} is list of supported workloads. {1} is list of installed optional workloads</comment>
  </data>
  <data name="WorkloadConstraint_Name" xml:space="preserve">
    <value>Workload</value>
    <comment>Terminus Technicus - most likely not to be translated (https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-workload-install)</comment>
  </data>
  <data name="WorkloadConstraint_Warning_DuplicateWorkloads" xml:space="preserve">
    <value>'IWorkloadsInfoProvider' component provided by host provided some duplicated workloads (duplicates: {0}). Duplicates will be skipped.</value>
    <comment>{0} is the list of duplicates</comment>
  </data>
</root>
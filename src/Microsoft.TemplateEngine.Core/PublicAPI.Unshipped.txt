~Microsoft.TemplateEngine.Core.Util.EngineConfig.EngineConfig(Microsoft.Extensions.Logging.ILogger logger, Microsoft.TemplateEngine.Core.Contracts.IVariableCollection variables) -> void
~Microsoft.TemplateEngine.Core.Util.EngineConfig.EngineConfig(Microsoft.Extensions.Logging.ILogger logger, Microsoft.TemplateEngine.Core.Contracts.IVariableCollection variables, string variableFormatString) -> void
~Microsoft.TemplateEngine.Core.Util.EngineConfig.EngineConfig(Microsoft.Extensions.Logging.ILogger logger, System.Collections.Generic.IReadOnlyList<string> whitespaces, System.Collections.Generic.IReadOnlyList<string> lineEndings, Microsoft.TemplateEngine.Core.Contracts.IVariableCollection variables, string variableFormatString = "{0}") -> void
~Microsoft.TemplateEngine.Core.Util.EngineConfig.Logger.get -> Microsoft.Extensions.Logging.ILogger
~Microsoft.TemplateEngine.Core.Util.Orchestrator.GetFileChanges(Microsoft.TemplateEngine.Core.Contracts.IGlobalRunSpec spec, string sourceDir, string targetDir) -> System.Collections.Generic.IReadOnlyList<Microsoft.TemplateEngine.Abstractions.IFileChange2>
~Microsoft.TemplateEngine.Core.Util.Orchestrator.GetFileChanges(string runSpecPath, string sourceDir, string targetDir) -> System.Collections.Generic.IReadOnlyList<Microsoft.TemplateEngine.Abstractions.IFileChange2>
~Microsoft.TemplateEngine.Core.Util.Orchestrator.Orchestrator(Microsoft.Extensions.Logging.ILogger logger, Microsoft.TemplateEngine.Abstractions.PhysicalFileSystem.IPhysicalFileSystem fileSystem) -> void
~Microsoft.TemplateEngine.Core.Util.Orchestrator.Run(Microsoft.TemplateEngine.Core.Contracts.IGlobalRunSpec spec, string sourceDir, string targetDir) -> void
~Microsoft.TemplateEngine.Core.Util.Orchestrator.Run(string runSpecPath, string sourceDir, string targetDir) -> void
~static Microsoft.TemplateEngine.Core.Expressions.Cpp.CppStyleEvaluatorDefinition.EvaluateFromString(Microsoft.Extensions.Logging.ILogger logger, string text, Microsoft.TemplateEngine.Core.Contracts.IVariableCollection variables) -> bool
~static Microsoft.TemplateEngine.Core.Expressions.Shared.SharedEvaluatorDefinition<TSelf, TTokens>.EvaluateFromString(Microsoft.Extensions.Logging.ILogger logger, string text, Microsoft.TemplateEngine.Core.Contracts.IVariableCollection variables) -> bool
~virtual Microsoft.TemplateEngine.Core.Util.Orchestrator.TryGetBufferSize(string sourceFile, out int bufferSize) -> bool
~virtual Microsoft.TemplateEngine.Core.Util.Orchestrator.TryGetFlushThreshold(string sourceFile, out int threshold) -> bool
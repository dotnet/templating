//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.TemplateEngine.Cli {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class LocalizableStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LocalizableStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.TemplateEngine.Cli.LocalizableStrings", typeof(LocalizableStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action would have been taken automatically:.
        /// </summary>
        internal static string ActionWouldHaveBeenTakenAutomatically {
            get {
                return ResourceManager.GetString("ActionWouldHaveBeenTakenAutomatically", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to add project(s) {0} to solution file {1}, solution folder {2}..
        /// </summary>
        internal static string AddProjToSlnPostActionFailed {
            get {
                return ResourceManager.GetString("AddProjToSlnPostActionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add project reference to solution action is not configured correctly in the template. Unable to determine the project files to add..
        /// </summary>
        internal static string AddProjToSlnPostActionNoProjFiles {
            get {
                return ResourceManager.GetString("AddProjToSlnPostActionNoProjFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding project reference(s) to solution file. Running {0}.
        /// </summary>
        internal static string AddProjToSlnPostActionRunning {
            get {
                return ResourceManager.GetString("AddProjToSlnPostActionRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully added
        ///    project(s): {0}
        ///    to solution file: {1}
        ///    solution folder: {2}.
        /// </summary>
        internal static string AddProjToSlnPostActionSucceeded {
            get {
                return ResourceManager.GetString("AddProjToSlnPostActionSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to determine which solution file to add the reference to..
        /// </summary>
        internal static string AddProjToSlnPostActionUnresolvedSlnFile {
            get {
                return ResourceManager.GetString("AddProjToSlnPostActionUnresolvedSlnFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding a package reference. Running dotnet add {0} package {1}.
        /// </summary>
        internal static string AddRefPostActionAddPackageRef {
            get {
                return ResourceManager.GetString("AddRefPostActionAddPackageRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding a package reference. Running dotnet add {0} package {1} --version {2}.
        /// </summary>
        internal static string AddRefPostActionAddPackageRefWithVersion {
            get {
                return ResourceManager.GetString("AddRefPostActionAddPackageRefWithVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding a project reference. Running dotnet add {0} reference {1}.
        /// </summary>
        internal static string AddRefPostActionAddProjectRef {
            get {
                return ResourceManager.GetString("AddRefPostActionAddProjectRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to add reference {0} to project file {1}.
        /// </summary>
        internal static string AddRefPostActionFailed {
            get {
                return ResourceManager.GetString("AddRefPostActionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to automatically add the framework reference {0} to the project. Manually edit the project file to add it..
        /// </summary>
        internal static string AddRefPostActionFrameworkNotSupported {
            get {
                return ResourceManager.GetString("AddRefPostActionFrameworkNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add reference action is not configured correctly in the template..
        /// </summary>
        internal static string AddRefPostActionMisconfigured {
            get {
                return ResourceManager.GetString("AddRefPostActionMisconfigured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project files found:.
        /// </summary>
        internal static string AddRefPostActionProjFileListHeader {
            get {
                return ResourceManager.GetString("AddRefPostActionProjFileListHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully added
        ///    reference: {0}
        ///    to project file: {1}.
        /// </summary>
        internal static string AddRefPostActionSucceeded {
            get {
                return ResourceManager.GetString("AddRefPostActionSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to determine which project file to add the reference to..
        /// </summary>
        internal static string AddRefPostActionUnresolvedProjFile {
            get {
                return ResourceManager.GetString("AddRefPostActionUnresolvedProjFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding reference type {0} is not supported..
        /// </summary>
        internal static string AddRefPostActionUnsupportedRefType {
            get {
                return ResourceManager.GetString("AddRefPostActionUnsupportedRefType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alias &apos;{0}&apos; is a template short name, and therefore cannot be aliased..
        /// </summary>
        internal static string AliasCannotBeShortName {
            get {
                return ResourceManager.GetString("AliasCannotBeShortName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to After expanding aliases, the command is:
        ///    dotnet {0}.
        /// </summary>
        internal static string AliasCommandAfterExpansion {
            get {
                return ResourceManager.GetString("AliasCommandAfterExpansion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully created alias named &apos;{0}&apos; with value &apos;{1}&apos;.
        /// </summary>
        internal static string AliasCreated {
            get {
                return ResourceManager.GetString("AliasCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alias not created. It would have created an alias cycle, resulting in infinite expansion..
        /// </summary>
        internal static string AliasCycleError {
            get {
                return ResourceManager.GetString("AliasCycleError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command is invalid after expanding aliases..
        /// </summary>
        internal static string AliasExpandedCommandParseError {
            get {
                return ResourceManager.GetString("AliasExpandedCommandParseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error expanding aliases on input params..
        /// </summary>
        internal static string AliasExpansionError {
            get {
                return ResourceManager.GetString("AliasExpansionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alias Name.
        /// </summary>
        internal static string AliasName {
            get {
                return ResourceManager.GetString("AliasName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alias names can only contain letters, numbers, underscores, and periods..
        /// </summary>
        internal static string AliasNameContainsInvalidCharacters {
            get {
                return ResourceManager.GetString("AliasNameContainsInvalidCharacters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alias not created. The input was invalid..
        /// </summary>
        internal static string AliasNotCreatedInvalidInput {
            get {
                return ResourceManager.GetString("AliasNotCreatedInvalidInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully removed alias named &apos;{0}&apos; whose value was &apos;{1}&apos;..
        /// </summary>
        internal static string AliasRemoved {
            get {
                return ResourceManager.GetString("AliasRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to remove alias &apos;{0}&apos;. It did not exist..
        /// </summary>
        internal static string AliasRemoveNonExistentFailed {
            get {
                return ResourceManager.GetString("AliasRemoveNonExistentFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All Aliases:.
        /// </summary>
        internal static string AliasShowAllAliasesHeader {
            get {
                return ResourceManager.GetString("AliasShowAllAliasesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown alias name &apos;{0}&apos;.
        ///Run &apos;dotnet {1} --show-aliases&apos; with no args to show all aliases..
        /// </summary>
        internal static string AliasShowErrorUnknownAlias {
            get {
                return ResourceManager.GetString("AliasShowErrorUnknownAlias", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully updated alias named &apos;{0}&apos; to value &apos;{1}&apos;..
        /// </summary>
        internal static string AliasUpdated {
            get {
                return ResourceManager.GetString("AliasUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alias Value.
        /// </summary>
        internal static string AliasValue {
            get {
                return ResourceManager.GetString("AliasValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to First argument of an alias value must begin with a letter or digit..
        /// </summary>
        internal static string AliasValueFirstArgError {
            get {
                return ResourceManager.GetString("AliasValueFirstArgError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not allow scripts to run.
        /// </summary>
        internal static string AllowScriptsNoChoice {
            get {
                return ResourceManager.GetString("AllowScriptsNoChoice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ask before running each script.
        /// </summary>
        internal static string AllowScriptsPromptChoice {
            get {
                return ResourceManager.GetString("AllowScriptsPromptChoice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow scripts to run.
        /// </summary>
        internal static string AllowScriptsYesChoice {
            get {
                return ResourceManager.GetString("AllowScriptsYesChoice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Re-run the command specifying the language to use with --language option..
        /// </summary>
        internal static string AmbiguousLanguageHint {
            get {
                return ResourceManager.GetString("AmbiguousLanguageHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value &apos;{1}&apos; is ambiguous for option {0}..
        /// </summary>
        internal static string AmbiguousParameterDetail {
            get {
                return ResourceManager.GetString("AmbiguousParameterDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to resolve the template to instantiate, these templates matched your input:.
        /// </summary>
        internal static string AmbiguousTemplateGroupListHeader {
            get {
                return ResourceManager.GetString("AmbiguousTemplateGroupListHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Re-run the command using the template&apos;s exact short name..
        /// </summary>
        internal static string AmbiguousTemplateGroupListHint {
            get {
                return ResourceManager.GetString("AmbiguousTemplateGroupListHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to resolve the template to instantiate, the following installed templates are conflicting:.
        /// </summary>
        internal static string AmbiguousTemplatesHeader {
            get {
                return ResourceManager.GetString("AmbiguousTemplatesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall the templates or the packages to keep only one template from the list..
        /// </summary>
        internal static string AmbiguousTemplatesMultiplePackagesHint {
            get {
                return ResourceManager.GetString("AmbiguousTemplatesMultiplePackagesHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package {0} is not correct, uninstall it and report the issue to the package author..
        /// </summary>
        internal static string AmbiguousTemplatesSamePackageHint {
            get {
                return ResourceManager.GetString("AmbiguousTemplatesSamePackageHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified extra args file does not exist: {0}..
        /// </summary>
        internal static string ArgsFileNotFound {
            get {
                return ResourceManager.GetString("ArgsFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extra args file {0} is not formatted properly..
        /// </summary>
        internal static string ArgsFileWrongFormat {
            get {
                return ResourceManager.GetString("ArgsFileWrongFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly.
        /// </summary>
        internal static string Assembly {
            get {
                return ResourceManager.GetString("Assembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Author: {0}.
        /// </summary>
        internal static string Author {
            get {
                return ResourceManager.GetString("Author", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Equal highest precedence values among the best template matches prevented unambiguously choosing a template to invoke..
        /// </summary>
        internal static string Authoring_AmbiguousBestPrecedence {
            get {
                return ResourceManager.GetString("Authoring_AmbiguousBestPrecedence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An ambiguous choice parameter value prevented unambiguously choosing a template to invoke..
        /// </summary>
        internal static string Authoring_AmbiguousChoiceParameterValue {
            get {
                return ResourceManager.GetString("Authoring_AmbiguousChoiceParameterValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change.
        /// </summary>
        internal static string Change {
            get {
                return ResourceManager.GetString("Change", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Author.
        /// </summary>
        internal static string ColumnNameAuthor {
            get {
                return ResourceManager.GetString("ColumnNameAuthor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current.
        /// </summary>
        internal static string ColumnNameCurrentVersion {
            get {
                return ResourceManager.GetString("ColumnNameCurrentVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identity.
        /// </summary>
        internal static string ColumnNameIdentity {
            get {
                return ResourceManager.GetString("ColumnNameIdentity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language.
        /// </summary>
        internal static string ColumnNameLanguage {
            get {
                return ResourceManager.GetString("ColumnNameLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Latest.
        /// </summary>
        internal static string ColumnNameLatestVersion {
            get {
                return ResourceManager.GetString("ColumnNameLatestVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package.
        /// </summary>
        internal static string ColumnNamePackage {
            get {
                return ResourceManager.GetString("ColumnNamePackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Precedence.
        /// </summary>
        internal static string ColumnNamePrecedence {
            get {
                return ResourceManager.GetString("ColumnNamePrecedence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The column {0} is/are not supported, the supported columns are: {1}..
        /// </summary>
        internal static string ColumnNamesAreNotSupported {
            get {
                return ResourceManager.GetString("ColumnNamesAreNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Short Name.
        /// </summary>
        internal static string ColumnNameShortName {
            get {
                return ResourceManager.GetString("ColumnNameShortName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tags.
        /// </summary>
        internal static string ColumnNameTags {
            get {
                return ResourceManager.GetString("ColumnNameTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template Name.
        /// </summary>
        internal static string ColumnNameTemplateName {
            get {
                return ResourceManager.GetString("ColumnNameTemplateName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloads.
        /// </summary>
        internal static string ColumnNameTotalDownloads {
            get {
                return ResourceManager.GetString("ColumnNameTotalDownloads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type.
        /// </summary>
        internal static string ColumnNameType {
            get {
                return ResourceManager.GetString("ColumnNameType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template Instantiation Commands for .NET Core CLI.
        /// </summary>
        internal static string CommandDescription {
            get {
                return ResourceManager.GetString("CommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command failed..
        /// </summary>
        internal static string CommandFailed {
            get {
                return ResourceManager.GetString("CommandFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output from command:
        ///{0}.
        /// </summary>
        internal static string CommandOutput {
            get {
                return ResourceManager.GetString("CommandOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command succeeded..
        /// </summary>
        internal static string CommandSucceeded {
            get {
                return ResourceManager.GetString("CommandSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commit Hash:.
        /// </summary>
        internal static string CommitHash {
            get {
                return ResourceManager.GetString("CommitHash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configured Value: {0}.
        /// </summary>
        internal static string ConfiguredValue {
            get {
                return ResourceManager.GetString("ConfiguredValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t determine files to restore..
        /// </summary>
        internal static string CouldntDetermineFilesToRestore {
            get {
                return ResourceManager.GetString("CouldntDetermineFilesToRestore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template &quot;{0}&quot; could not be created.
        ///{1}.
        /// </summary>
        internal static string CreateFailed {
            get {
                return ResourceManager.GetString("CreateFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The template &quot;{0}&quot; was created successfully..
        /// </summary>
        internal static string CreateSuccessful {
            get {
                return ResourceManager.GetString("CreateSuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current configuration:.
        /// </summary>
        internal static string CurrentConfiguration {
            get {
                return ResourceManager.GetString("CurrentConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default if option is provided without a value: {0}.
        /// </summary>
        internal static string DefaultIfOptionWithoutValue {
            get {
                return ResourceManager.GetString("DefaultIfOptionWithoutValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default: {0}.
        /// </summary>
        internal static string DefaultValue {
            get {
                return ResourceManager.GetString("DefaultValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete.
        /// </summary>
        internal static string Delete {
            get {
                return ResourceManager.GetString("Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description: {0}.
        /// </summary>
        internal static string Description {
            get {
                return ResourceManager.GetString("Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating this template will make changes to existing files:.
        /// </summary>
        internal static string DestructiveChangesNotification {
            get {
                return ResourceManager.GetString("DestructiveChangesNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays help for this command..
        /// </summary>
        internal static string DisplaysHelp {
            get {
                return ResourceManager.GetString("DisplaysHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays a summary of what would happen if the given command line were run if it would result in a template creation..
        /// </summary>
        internal static string DryRunDescription {
            get {
                return ResourceManager.GetString("DryRunDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to After expanding the extra args files, the command is:
        ///    dotnet {0}.
        /// </summary>
        internal static string ExtraArgsCommandAfterExpansion {
            get {
                return ResourceManager.GetString("ExtraArgsCommandAfterExpansion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File actions would have been taken:.
        /// </summary>
        internal static string FileActionsWouldHaveBeenTaken {
            get {
                return ResourceManager.GetString("FileActionsWouldHaveBeenTaken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Forces content to be generated even if it would change existing files..
        /// </summary>
        internal static string ForcesTemplateCreation {
            get {
                return ResourceManager.GetString("ForcesTemplateCreation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generators.
        /// </summary>
        internal static string Generators {
            get {
                return ResourceManager.GetString("Generators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Details: {0}.
        /// </summary>
        internal static string Generic_Details {
            get {
                return ResourceManager.GetString("Generic_Details", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: {0}.
        /// </summary>
        internal static string GenericError {
            get {
                return ResourceManager.GetString("GenericError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning: {0}.
        /// </summary>
        internal static string GenericWarning {
            get {
                return ResourceManager.GetString("GenericWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installs a source or a template package..
        /// </summary>
        internal static string InstallHelp {
            get {
                return ResourceManager.GetString("InstallHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows the internal dotnet restore command to stop and wait for user input or action (for example to complete authentication)..
        /// </summary>
        internal static string InteractiveHelp {
            get {
                return ResourceManager.GetString("InteractiveHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid input switch:.
        /// </summary>
        internal static string InvalidInputSwitch {
            get {
                return ResourceManager.GetString("InvalidInputSwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name cannot contain any of the following characters {0} or character codes {1}.
        /// </summary>
        internal static string InvalidNameParameter {
            get {
                return ResourceManager.GetString("InvalidNameParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default value &apos;{1}&apos; is not a valid value for {0}..
        /// </summary>
        internal static string InvalidParameterDefault {
            get {
                return ResourceManager.GetString("InvalidParameterDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{1}&apos; is not a valid value for {0}..
        /// </summary>
        internal static string InvalidParameterDetail {
            get {
                return ResourceManager.GetString("InvalidParameterDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a valid option.
        /// </summary>
        internal static string InvalidParameterNameDetail {
            get {
                return ResourceManager.GetString("InvalidParameterNameDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For more information, run &apos;{0}&apos;..
        /// </summary>
        internal static string InvalidParameterTemplateHint {
            get {
                return ResourceManager.GetString("InvalidParameterTemplateHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Invalid option(s):.
        /// </summary>
        internal static string InvalidTemplateParameterValues {
            get {
                return ResourceManager.GetString("InvalidTemplateParameterValues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filters templates based on language and specifies the language of the template to create..
        /// </summary>
        internal static string LanguageParameter {
            get {
                return ResourceManager.GetString("LanguageParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lists templates containing the specified template name. If no name is specified, lists all templates..
        /// </summary>
        internal static string ListsTemplates {
            get {
                return ResourceManager.GetString("ListsTemplates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To list installed templates, run &apos;dotnet {0} --list&apos;..
        /// </summary>
        internal static string ListTemplatesCommand {
            get {
                return ResourceManager.GetString("ListTemplatesCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mandatory option {0} missing for template {1}..
        /// </summary>
        internal static string MissingRequiredParameter {
            get {
                return ResourceManager.GetString("MissingRequiredParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to locate the specified template content, the template cache may be corrupted. Try running &apos;dotnet {0} --debug:reinit&apos; to fix the issue..
        /// </summary>
        internal static string MissingTemplateContentDetected {
            get {
                return ResourceManager.GetString("MissingTemplateContentDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mount Point Factories.
        /// </summary>
        internal static string MountPointFactories {
            get {
                return ResourceManager.GetString("MountPointFactories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name for the output being created. If no name is specified, the name of the output directory is used..
        /// </summary>
        internal static string NameOfOutput {
            get {
                return ResourceManager.GetString("NameOfOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (No Items).
        /// </summary>
        internal static string NoItems {
            get {
                return ResourceManager.GetString("NoItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     (No Parameters).
        /// </summary>
        internal static string NoParameters {
            get {
                return ResourceManager.GetString("NoParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Primary Outputs to restore..
        /// </summary>
        internal static string NoPrimaryOutputsToRestore {
            get {
                return ResourceManager.GetString("NoPrimaryOutputsToRestore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No templates found matching: {0}..
        /// </summary>
        internal static string NoTemplatesMatchingInputParameters {
            get {
                return ResourceManager.GetString("NoTemplatesMatchingInputParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies a NuGet source to use during install..
        /// </summary>
        internal static string NuGetSourceHelp {
            get {
                return ResourceManager.GetString("NuGetSourceHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error during synchronization with the Optional SDK Workloads..
        /// </summary>
        internal static string OptionalWorkloadsSyncFailed {
            get {
                return ResourceManager.GetString("OptionalWorkloadsSyncFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filters the templates based on the template author. Applicable only with --search or --list | -l option..
        /// </summary>
        internal static string OptionDescriptionAuthorFilter {
            get {
                return ResourceManager.GetString("OptionDescriptionAuthorFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comma separated list of columns to display in --list and --search output. 
        ///The supported columns are: language, tags, author, type..
        /// </summary>
        internal static string OptionDescriptionColumns {
            get {
                return ResourceManager.GetString("OptionDescriptionColumns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display all columns in --list and --search output..
        /// </summary>
        internal static string OptionDescriptionColumnsAll {
            get {
                return ResourceManager.GetString("OptionDescriptionColumnsAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filters the templates based on NuGet package ID. Applies to --search..
        /// </summary>
        internal static string OptionDescriptionPackageFilter {
            get {
                return ResourceManager.GetString("OptionDescriptionPackageFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Searches for the templates on NuGet.org..
        /// </summary>
        internal static string OptionDescriptionSearch {
            get {
                return ResourceManager.GetString("OptionDescriptionSearch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filters the templates based on the tag. Applies to --search and --list..
        /// </summary>
        internal static string OptionDescriptionTagFilter {
            get {
                return ResourceManager.GetString("OptionDescriptionTagFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Options:.
        /// </summary>
        internal static string Options {
            get {
                return ResourceManager.GetString("Options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location to place the generated output..
        /// </summary>
        internal static string OutputPath {
            get {
                return ResourceManager.GetString("OutputPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overwrite.
        /// </summary>
        internal static string Overwrite {
            get {
                return ResourceManager.GetString("Overwrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some partially matched templates may not support these input switches:.
        /// </summary>
        internal static string PartialTemplateMatchSwitchesNotValidForAllMatches {
            get {
                return ResourceManager.GetString("PartialTemplateMatchSwitchesNotValidForAllMatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The possible values are:.
        /// </summary>
        internal static string PossibleValuesHeader {
            get {
                return ResourceManager.GetString("PossibleValuesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Actual command: {0}.
        /// </summary>
        internal static string PostActionCommand {
            get {
                return ResourceManager.GetString("PostActionCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description: {0}.
        /// </summary>
        internal static string PostActionDescription {
            get {
                return ResourceManager.GetString("PostActionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Post action failed..
        /// </summary>
        internal static string PostActionFailedInstructionHeader {
            get {
                return ResourceManager.GetString("PostActionFailedInstructionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manual instructions: {0}.
        /// </summary>
        internal static string PostActionInstructions {
            get {
                return ResourceManager.GetString("PostActionInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid input &quot;{0}&quot;. Please enter one of [{1}(yes)|{2}(no)]..
        /// </summary>
        internal static string PostActionInvalidInputRePrompt {
            get {
                return ResourceManager.GetString("PostActionInvalidInputRePrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template is configured to run the following action:.
        /// </summary>
        internal static string PostActionPromptHeader {
            get {
                return ResourceManager.GetString("PostActionPromptHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to run this action [{0}(yes)|{1}(no)]?.
        /// </summary>
        internal static string PostActionPromptRequest {
            get {
                return ResourceManager.GetString("PostActionPromptRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Processing post-creation actions....
        /// </summary>
        internal static string ProcessingPostActions {
            get {
                return ResourceManager.GetString("ProcessingPostActions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rerun the command and pass --force to accept and create..
        /// </summary>
        internal static string RerunCommandAndPassForceToCreateAnyway {
            get {
                return ResourceManager.GetString("RerunCommandAndPassForceToCreateAnyway", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore failed..
        /// </summary>
        internal static string RestoreFailed {
            get {
                return ResourceManager.GetString("RestoreFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore succeeded..
        /// </summary>
        internal static string RestoreSucceeded {
            get {
                return ResourceManager.GetString("RestoreSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run dotnet {0} --help for usage information..
        /// </summary>
        internal static string RunHelpForInformationAboutAcceptedParameters {
            get {
                return ResourceManager.GetString("RunHelpForInformationAboutAcceptedParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running command &apos;{0}&apos;....
        /// </summary>
        internal static string RunningCommand {
            get {
                return ResourceManager.GetString("RunningCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running &apos;dotnet restore&apos; on {0}....
        /// </summary>
        internal static string RunningDotnetRestoreOn {
            get {
                return ResourceManager.GetString("RunningDotnetRestoreOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search failed: no template name is specified.
        ///To search for the template, specify template name or use one of supported filters: {0}.
        ///Examples:
        ///        dotnet {1} &lt;template name&gt; --search
        ///        dotnet {1} --search --author Microsoft
        ///        dotnet {1} &lt;template name&gt; --search --author Microsoft.
        /// </summary>
        internal static string SearchOnlineErrorNoTemplateNameOrFilter {
            get {
                return ResourceManager.GetString("SearchOnlineErrorNoTemplateNameOrFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search failed: template name is too short, minimum 2 characters are required..
        /// </summary>
        internal static string SearchOnlineErrorTemplateNameIsTooShort {
            get {
                return ResourceManager.GetString("SearchOnlineErrorTemplateNameIsTooShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No remoted sources defined to search for the templates..
        /// </summary>
        internal static string SearchOnlineNoSources {
            get {
                return ResourceManager.GetString("SearchOnlineNoSources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Searching for the templates....
        /// </summary>
        internal static string SearchOnlineNotification {
            get {
                return ResourceManager.GetString("SearchOnlineNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template &apos;{0}&apos; was not found..
        /// </summary>
        internal static string SearchOnlineTemplateNotFound {
            get {
                return ResourceManager.GetString("SearchOnlineTemplateNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         dotnet {0} -i {1}.
        /// </summary>
        internal static string SearchResultInstallCommand {
            get {
                return ResourceManager.GetString("SearchResultInstallCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To use the template, run the following command to install the package: dotnet {0} -i &lt;package&gt;.
        /// </summary>
        internal static string SearchResultInstallHeader {
            get {
                return ResourceManager.GetString("SearchResultInstallHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Matches from template source: {0}.
        /// </summary>
        internal static string SearchResultSourceIndicator {
            get {
                return ResourceManager.GetString("SearchResultSourceIndicator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To search for the templates on NuGet.org, run &apos;dotnet {0} {1} --search&apos;..
        /// </summary>
        internal static string SearchTemplatesCommand {
            get {
                return ResourceManager.GetString("SearchTemplatesCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error reading the installed configuration, file may be corrupted. If this problem persists, try resetting with the `--debug:reinit&apos; flag.
        /// </summary>
        internal static string SettingsReadError {
            get {
                return ResourceManager.GetString("SettingsReadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows all templates..
        /// </summary>
        internal static string ShowsAllTemplates {
            get {
                return ResourceManager.GetString("ShowsAllTemplates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filters templates based on available types. Predefined values are &quot;project&quot; and &quot;item&quot;..
        /// </summary>
        internal static string ShowsFilteredTemplates {
            get {
                return ResourceManager.GetString("ShowsFilteredTemplates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following option(s) or their value(s) are not valid in combination with other supplied options or their values:.
        /// </summary>
        internal static string SingleTemplateGroupPartialMatchSwitchesNotValidForAllMatches {
            get {
                return ResourceManager.GetString("SingleTemplateGroupPartialMatchSwitchesNotValidForAllMatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find the template package containing template &apos;{0}&apos;.
        /// </summary>
        internal static string TemplatePackageCoordinator_Error_PackageForTemplateNotFound {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_Error_PackageForTemplateNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} (contains {1} templates).
        /// </summary>
        internal static string TemplatePackageCoordinator_Error_PackageNameContainsTemplates {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_Error_PackageNameContainsTemplates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The template package &apos;{0}&apos; is not found..
        /// </summary>
        internal static string TemplatePackageCoordinator_Error_PackageNotFound {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_Error_PackageNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The template &apos;{0}&apos; is included to the packages:.
        /// </summary>
        internal static string TemplatePackageCoordinator_Error_TemplateIncludedToPackages {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_Error_TemplateIncludedToPackages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Found no template packages to install..
        /// </summary>
        internal static string TemplatePackageCoordinator_Install_Error_FoundNoPackagesToInstall {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_Install_Error_FoundNoPackagesToInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The command is attempting to install the template package &apos;{0}&apos; twice, check the arguments and retry..
        /// </summary>
        internal static string TemplatePackageCoordinator_Install_Error_SameInstallRequests {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_Install_Error_SameInstallRequests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following template packages will be installed:.
        /// </summary>
        internal static string TemplatePackageCoordinator_Install_Info_PackagesToBeInstalled {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_Install_Info_PackagesToBeInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is already installed..
        /// </summary>
        internal static string TemplatePackageCoordinator_lnstall_Error_AlreadyInstalled {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_lnstall_Error_AlreadyInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} could not be installed, download failed..
        /// </summary>
        internal static string TemplatePackageCoordinator_lnstall_Error_DownloadFailed {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_lnstall_Error_DownloadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} could not be installed..
        /// </summary>
        internal static string TemplatePackageCoordinator_lnstall_Error_GenericError {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_lnstall_Error_GenericError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} could not be installed, no NuGet feeds are configured or they are invalid..
        /// </summary>
        internal static string TemplatePackageCoordinator_lnstall_Error_InvalidNuGetFeeds {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_lnstall_Error_InvalidNuGetFeeds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to install {0}, failed to uninstall previous version of the template package..
        /// </summary>
        internal static string TemplatePackageCoordinator_lnstall_Error_InvalidPackage {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_lnstall_Error_InvalidPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} could not be installed, the package does not exist..
        /// </summary>
        internal static string TemplatePackageCoordinator_lnstall_Error_PackageNotFound {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_lnstall_Error_PackageNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to install {0}, the template package is invalid..
        /// </summary>
        internal static string TemplatePackageCoordinator_lnstall_Error_UninstallFailed {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_lnstall_Error_UninstallFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not supported..
        /// </summary>
        internal static string TemplatePackageCoordinator_lnstall_Error_UnsupportedRequest {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_lnstall_Error_UnsupportedRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success: {0} installed the following templates:.
        /// </summary>
        internal static string TemplatePackageCoordinator_lnstall_Info_Success {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_lnstall_Info_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to uninstall {0}, reason: {1}..
        /// </summary>
        internal static string TemplatePackageCoordinator_Uninstall_Error_GenericError {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_Uninstall_Error_GenericError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To list installed template packages use:.
        /// </summary>
        internal static string TemplatePackageCoordinator_Uninstall_Error_ListPackagesHeader {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_Uninstall_Error_ListPackagesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To uninstall the template package use:.
        /// </summary>
        internal static string TemplatePackageCoordinator_Uninstall_Error_UninstallCommandHeader {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_Uninstall_Error_UninstallCommandHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Details:.
        /// </summary>
        internal static string TemplatePackageCoordinator_Uninstall_Info_DetailsHeader {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_Uninstall_Info_DetailsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Currently installed items:.
        /// </summary>
        internal static string TemplatePackageCoordinator_Uninstall_Info_InstalledItems {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_Uninstall_Info_InstalledItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success: {0} was uninstalled..
        /// </summary>
        internal static string TemplatePackageCoordinator_Uninstall_Info_Success {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_Uninstall_Info_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall Command:.
        /// </summary>
        internal static string TemplatePackageCoordinator_Uninstall_Info_UninstallCommandHint {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_Uninstall_Info_UninstallCommandHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to check update for {0}: {1}..
        /// </summary>
        internal static string TemplatePackageCoordinator_Update_Error_GenericError {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_Update_Error_GenericError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to check update for {0}: no NuGet feeds are configured or they are invalid..
        /// </summary>
        internal static string TemplatePackageCoordinator_Update_Error_InvalidNuGetFeeds {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_Update_Error_InvalidNuGetFeeds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to check update for {0}: the package is not available in configured NuGet feeds..
        /// </summary>
        internal static string TemplatePackageCoordinator_Update_Error_PackageNotFound {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_Update_Error_PackageNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to check update for {0}: the package is not supported..
        /// </summary>
        internal static string TemplatePackageCoordinator_Update_Error_PackageNotSupported {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_Update_Error_PackageNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All template packages are up-to-date..
        /// </summary>
        internal static string TemplatePackageCoordinator_Update_Info_AllPackagesAreUpToDate {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_Update_Info_AllPackagesAreUpToDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following template packages will be updated:.
        /// </summary>
        internal static string TemplatePackageCoordinator_Update_Info_PackagesToBeUpdated {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_Update_Info_PackagesToBeUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To update all the packages use:.
        /// </summary>
        internal static string TemplatePackageCoordinator_Update_Info_UpdateAllCommandHeader {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_Update_Info_UpdateAllCommandHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An update for template package &apos;{0}&apos; is available..
        /// </summary>
        internal static string TemplatePackageCoordinator_Update_Info_UpdateAvailable {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_Update_Info_UpdateAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An update for template packages is available:.
        /// </summary>
        internal static string TemplatePackageCoordinator_Update_Info_UpdateAvailablePackages {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_Update_Info_UpdateAvailablePackages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To update the package use:.
        /// </summary>
        internal static string TemplatePackageCoordinator_Update_Info_UpdateSingleCommandHeader {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_Update_Info_UpdateSingleCommandHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to initialize NuGet credential service, details: {0}..
        /// </summary>
        internal static string TemplatePackageCoordinator_Verbose_NuGetCredentialServiceError {
            get {
                return ResourceManager.GetString("TemplatePackageCoordinator_Verbose_NuGetCredentialServiceError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [Warning]: Failed to parse input for template {0}, it will be skipped from further processing..
        /// </summary>
        internal static string TemplateResolver_Warning_FailedToReparseTemplate {
            get {
                return ResourceManager.GetString("TemplateResolver_Warning_FailedToReparseTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Templates.
        /// </summary>
        internal static string Templates {
            get {
                return ResourceManager.GetString("Templates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These templates matched your input: {0}..
        /// </summary>
        internal static string TemplatesFoundMatchingInputParameters {
            get {
                return ResourceManager.GetString("TemplatesFoundMatchingInputParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} template(s) partially matched, but failed on {1}..
        /// </summary>
        internal static string TemplatesNotValidGivenTheSpecifiedFilter {
            get {
                return ResourceManager.GetString("TemplatesNotValidGivenTheSpecifiedFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This template contains technologies from parties other than Microsoft, see {0} for details..
        /// </summary>
        internal static string ThirdPartyNotices {
            get {
                return ResourceManager.GetString("ThirdPartyNotices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type.
        /// </summary>
        internal static string Type {
            get {
                return ResourceManager.GetString("Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to apply permissions {0} to &quot;{1}&quot;..
        /// </summary>
        internal static string UnableToSetPermissions {
            get {
                return ResourceManager.GetString("UnableToSetPermissions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstalls a source or a template package..
        /// </summary>
        internal static string UninstallHelp {
            get {
                return ResourceManager.GetString("UninstallHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown Change.
        /// </summary>
        internal static string UnknownChangeKind {
            get {
                return ResourceManager.GetString("UnknownChangeKind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check the currently installed template packages for update, and install the updates..
        /// </summary>
        internal static string UpdateApplyCommandHelp {
            get {
                return ResourceManager.GetString("UpdateApplyCommandHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check the currently installed template packages for updates..
        /// </summary>
        internal static string UpdateCheckCommandHelp {
            get {
                return ResourceManager.GetString("UpdateCheckCommandHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version:.
        /// </summary>
        internal static string Version {
            get {
                return ResourceManager.GetString("Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify if post action scripts should run..
        /// </summary>
        internal static string WhetherToAllowScriptsToRun {
            get {
                return ResourceManager.GetString("WhetherToAllowScriptsToRun", resourceCulture);
            }
        }
    }
}

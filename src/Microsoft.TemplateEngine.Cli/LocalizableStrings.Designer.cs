//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.TemplateEngine.Cli {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class LocalizableStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LocalizableStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.TemplateEngine.Cli.LocalizableStrings", typeof(LocalizableStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action would have been taken automatically:.
        /// </summary>
        public static string ActionWouldHaveBeenTakenAutomatically {
            get {
                return ResourceManager.GetString("ActionWouldHaveBeenTakenAutomatically", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to add project(s) {0} to solution file {1}, solution folder {2}..
        /// </summary>
        public static string AddProjToSlnPostActionFailed {
            get {
                return ResourceManager.GetString("AddProjToSlnPostActionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add project reference to solution action is not configured correctly in the template. Unable to determine the project files to add..
        /// </summary>
        public static string AddProjToSlnPostActionNoProjFiles {
            get {
                return ResourceManager.GetString("AddProjToSlnPostActionNoProjFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding project reference(s) to solution file. Running {0}.
        /// </summary>
        public static string AddProjToSlnPostActionRunning {
            get {
                return ResourceManager.GetString("AddProjToSlnPostActionRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully added
        ///    project(s): {0}
        ///    to solution file: {1}
        ///    solution folder: {2}.
        /// </summary>
        public static string AddProjToSlnPostActionSucceeded {
            get {
                return ResourceManager.GetString("AddProjToSlnPostActionSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to determine which solution file to add the reference to..
        /// </summary>
        public static string AddProjToSlnPostActionUnresolvedSlnFile {
            get {
                return ResourceManager.GetString("AddProjToSlnPostActionUnresolvedSlnFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding a package reference. Running dotnet add {0} package {1}.
        /// </summary>
        public static string AddRefPostActionAddPackageRef {
            get {
                return ResourceManager.GetString("AddRefPostActionAddPackageRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding a package reference. Running dotnet add {0} package {1} --version {2}.
        /// </summary>
        public static string AddRefPostActionAddPackageRefWithVersion {
            get {
                return ResourceManager.GetString("AddRefPostActionAddPackageRefWithVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding a project reference. Running dotnet add {0} reference {1}.
        /// </summary>
        public static string AddRefPostActionAddProjectRef {
            get {
                return ResourceManager.GetString("AddRefPostActionAddProjectRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to add reference {0} to project file {1}.
        /// </summary>
        public static string AddRefPostActionFailed {
            get {
                return ResourceManager.GetString("AddRefPostActionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to automatically add the framework reference {0} to the project. Manually edit the project file to add it..
        /// </summary>
        public static string AddRefPostActionFrameworkNotSupported {
            get {
                return ResourceManager.GetString("AddRefPostActionFrameworkNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add reference action is not configured correctly in the template..
        /// </summary>
        public static string AddRefPostActionMisconfigured {
            get {
                return ResourceManager.GetString("AddRefPostActionMisconfigured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No references configured to be added to project..
        /// </summary>
        public static string AddRefPostActionNoRefConfigured {
            get {
                return ResourceManager.GetString("AddRefPostActionNoRefConfigured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project files found:.
        /// </summary>
        public static string AddRefPostActionProjFileListHeader {
            get {
                return ResourceManager.GetString("AddRefPostActionProjFileListHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully added
        ///    reference: {0}
        ///    to project file: {1}.
        /// </summary>
        public static string AddRefPostActionSucceeded {
            get {
                return ResourceManager.GetString("AddRefPostActionSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to determine which project file to add the reference to..
        /// </summary>
        public static string AddRefPostActionUnresolvedProjFile {
            get {
                return ResourceManager.GetString("AddRefPostActionUnresolvedProjFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding reference type {0} is not supported..
        /// </summary>
        public static string AddRefPostActionUnsupportedRefType {
            get {
                return ResourceManager.GetString("AddRefPostActionUnsupportedRefType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alias.
        /// </summary>
        public static string Alias {
            get {
                return ResourceManager.GetString("Alias", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alias &apos;{0}&apos; is a template short name, and therefore cannot be aliased..
        /// </summary>
        public static string AliasCannotBeShortName {
            get {
                return ResourceManager.GetString("AliasCannotBeShortName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to After expanding aliases, the command is:
        ///    dotnet {0}.
        /// </summary>
        public static string AliasCommandAfterExpansion {
            get {
                return ResourceManager.GetString("AliasCommandAfterExpansion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully created alias named &apos;{0}&apos; with value &apos;{1}&apos;.
        /// </summary>
        public static string AliasCreated {
            get {
                return ResourceManager.GetString("AliasCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alias not created. It would have created an alias cycle, resulting in infinite expansion..
        /// </summary>
        public static string AliasCycleError {
            get {
                return ResourceManager.GetString("AliasCycleError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command is invalid after expanding aliases..
        /// </summary>
        public static string AliasExpandedCommandParseError {
            get {
                return ResourceManager.GetString("AliasExpandedCommandParseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error expanding aliases on input params..
        /// </summary>
        public static string AliasExpansionError {
            get {
                return ResourceManager.GetString("AliasExpansionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creates, updates, or deletes the named alias. The alias value is the remainder of the command. If extra args files are specified, the alias value includes their expansions..
        /// </summary>
        public static string AliasHelp {
            get {
                return ResourceManager.GetString("AliasHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alias Name.
        /// </summary>
        public static string AliasName {
            get {
                return ResourceManager.GetString("AliasName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alias names can only contain letters, numbers, underscores, and periods..
        /// </summary>
        public static string AliasNameContainsInvalidCharacters {
            get {
                return ResourceManager.GetString("AliasNameContainsInvalidCharacters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alias not created. The input was invalid..
        /// </summary>
        public static string AliasNotCreatedInvalidInput {
            get {
                return ResourceManager.GetString("AliasNotCreatedInvalidInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully removed alias named &apos;{0}&apos; whose value was &apos;{1}&apos;..
        /// </summary>
        public static string AliasRemoved {
            get {
                return ResourceManager.GetString("AliasRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to remove alias &apos;{0}&apos;. It did not exist..
        /// </summary>
        public static string AliasRemoveNonExistentFailed {
            get {
                return ResourceManager.GetString("AliasRemoveNonExistentFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All Aliases:.
        /// </summary>
        public static string AliasShowAllAliasesHeader {
            get {
                return ResourceManager.GetString("AliasShowAllAliasesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown alias name &apos;{0}&apos;.
        ///Run &apos;dotnet {1} --show-aliases&apos; with no args to show all aliases..
        /// </summary>
        public static string AliasShowErrorUnknownAlias {
            get {
                return ResourceManager.GetString("AliasShowErrorUnknownAlias", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully updated alias named &apos;{0}&apos; to value &apos;{1}&apos;..
        /// </summary>
        public static string AliasUpdated {
            get {
                return ResourceManager.GetString("AliasUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alias Value.
        /// </summary>
        public static string AliasValue {
            get {
                return ResourceManager.GetString("AliasValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to First argument of an alias value must begin with a letter or digit..
        /// </summary>
        public static string AliasValueFirstArgError {
            get {
                return ResourceManager.GetString("AliasValueFirstArgError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not allow scripts to run.
        /// </summary>
        public static string AllowScriptsNoChoice {
            get {
                return ResourceManager.GetString("AllowScriptsNoChoice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ask before running each script.
        /// </summary>
        public static string AllowScriptsPromptChoice {
            get {
                return ResourceManager.GetString("AllowScriptsPromptChoice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow scripts to run.
        /// </summary>
        public static string AllowScriptsYesChoice {
            get {
                return ResourceManager.GetString("AllowScriptsYesChoice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to determine the desired template from the input template name: {0}..
        /// </summary>
        public static string AmbiguousInputTemplateName {
            get {
                return ResourceManager.GetString("AmbiguousInputTemplateName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Re-run the command specifying the language to use with --language option..
        /// </summary>
        public static string AmbiguousLanguageHint {
            get {
                return ResourceManager.GetString("AmbiguousLanguageHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value &apos;{1}&apos; is ambiguous for option {0}..
        /// </summary>
        public static string AmbiguousParameterDetail {
            get {
                return ResourceManager.GetString("AmbiguousParameterDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to resolve the template to instantiate, these templates matched your input:.
        /// </summary>
        public static string AmbiguousTemplateGroupListHeader {
            get {
                return ResourceManager.GetString("AmbiguousTemplateGroupListHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Re-run the command using the template&apos;s exact short name..
        /// </summary>
        public static string AmbiguousTemplateGroupListHint {
            get {
                return ResourceManager.GetString("AmbiguousTemplateGroupListHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to resolve the template to instantiate, the following installed templates are conflicting:.
        /// </summary>
        public static string AmbiguousTemplatesHeader {
            get {
                return ResourceManager.GetString("AmbiguousTemplatesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall the templates or the packages to keep only one template from the list..
        /// </summary>
        public static string AmbiguousTemplatesMultiplePackagesHint {
            get {
                return ResourceManager.GetString("AmbiguousTemplatesMultiplePackagesHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The package {0} is not correct, uninstall it and report the issue to the package author..
        /// </summary>
        public static string AmbiguousTemplatesSamePackageHint {
            get {
                return ResourceManager.GetString("AmbiguousTemplatesSamePackageHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To check the uninstallation command for the template, run dotnet {0} -u..
        /// </summary>
        public static string AmbiguousTemplatesUninstallationHint {
            get {
                return ResourceManager.GetString("AmbiguousTemplatesUninstallationHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified extra args file does not exist: {0}..
        /// </summary>
        public static string ArgsFileNotFound {
            get {
                return ResourceManager.GetString("ArgsFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extra args file {0} is not formatted properly..
        /// </summary>
        public static string ArgsFileWrongFormat {
            get {
                return ResourceManager.GetString("ArgsFileWrongFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly.
        /// </summary>
        public static string Assembly {
            get {
                return ResourceManager.GetString("Assembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Author: {0}.
        /// </summary>
        public static string Author {
            get {
                return ResourceManager.GetString("Author", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Equal highest precedence values among the best template matches prevented unambiguously choosing a template to invoke..
        /// </summary>
        public static string Authoring_AmbiguousBestPrecedence {
            get {
                return ResourceManager.GetString("Authoring_AmbiguousBestPrecedence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An ambiguous choice parameter value prevented unambiguously choosing a template to invoke..
        /// </summary>
        public static string Authoring_AmbiguousChoiceParameterValue {
            get {
                return ResourceManager.GetString("Authoring_AmbiguousChoiceParameterValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid format for input locale: &quot;{0}&quot;. Example valid formats: [en] [en-US]..
        /// </summary>
        public static string BadLocaleError {
            get {
                return ResourceManager.GetString("BadLocaleError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not install &quot;{0}&quot;..
        /// </summary>
        public static string BadPackageSpec {
            get {
                return ResourceManager.GetString("BadPackageSpec", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change.
        /// </summary>
        public static string Change {
            get {
                return ResourceManager.GetString("Change", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking for updates for {0}....
        /// </summary>
        public static string CheckingForUpdates {
            get {
                return ResourceManager.GetString("CheckingForUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Author.
        /// </summary>
        public static string ColumnNameAuthor {
            get {
                return ResourceManager.GetString("ColumnNameAuthor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identity.
        /// </summary>
        public static string ColumnNameIdentity {
            get {
                return ResourceManager.GetString("ColumnNameIdentity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language.
        /// </summary>
        public static string ColumnNameLanguage {
            get {
                return ResourceManager.GetString("ColumnNameLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package.
        /// </summary>
        public static string ColumnNamePackage {
            get {
                return ResourceManager.GetString("ColumnNamePackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Precedence.
        /// </summary>
        public static string ColumnNamePrecedence {
            get {
                return ResourceManager.GetString("ColumnNamePrecedence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The column {0} is/are not supported, the supported columns are: {1}..
        /// </summary>
        public static string ColumnNamesAreNotSupported {
            get {
                return ResourceManager.GetString("ColumnNamesAreNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Short Name.
        /// </summary>
        public static string ColumnNameShortName {
            get {
                return ResourceManager.GetString("ColumnNameShortName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tags.
        /// </summary>
        public static string ColumnNameTags {
            get {
                return ResourceManager.GetString("ColumnNameTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template Name.
        /// </summary>
        public static string ColumnNameTemplateName {
            get {
                return ResourceManager.GetString("ColumnNameTemplateName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloads.
        /// </summary>
        public static string ColumnNameTotalDownloads {
            get {
                return ResourceManager.GetString("ColumnNameTotalDownloads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type.
        /// </summary>
        public static string ColumnNameType {
            get {
                return ResourceManager.GetString("ColumnNameType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template Instantiation Commands for .NET Core CLI.
        /// </summary>
        public static string CommandDescription {
            get {
                return ResourceManager.GetString("CommandDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command failed..
        /// </summary>
        public static string CommandFailed {
            get {
                return ResourceManager.GetString("CommandFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output from command:
        ///{0}.
        /// </summary>
        public static string CommandOutput {
            get {
                return ResourceManager.GetString("CommandOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command succeeded..
        /// </summary>
        public static string CommandSucceeded {
            get {
                return ResourceManager.GetString("CommandSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Commit Hash:.
        /// </summary>
        public static string CommitHash {
            get {
                return ResourceManager.GetString("CommitHash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configured Value: {0}.
        /// </summary>
        public static string ConfiguredValue {
            get {
                return ResourceManager.GetString("ConfiguredValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continue?.
        /// </summary>
        public static string ContinueQuestion {
            get {
                return ResourceManager.GetString("ContinueQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t find item to install: &quot;{0}&quot;..
        /// </summary>
        public static string CouldNotFindItemToInstall {
            get {
                return ResourceManager.GetString("CouldNotFindItemToInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t determine files to restore..
        /// </summary>
        public static string CouldntDetermineFilesToRestore {
            get {
                return ResourceManager.GetString("CouldntDetermineFilesToRestore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find something to uninstall called &apos;{0}&apos;..
        /// </summary>
        public static string CouldntUninstall {
            get {
                return ResourceManager.GetString("CouldntUninstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creates an alias for the specified template..
        /// </summary>
        public static string CreateAliasHelp {
            get {
                return ResourceManager.GetString("CreateAliasHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether to create a directory for the generated content..
        /// </summary>
        public static string CreateDirectoryHelp {
            get {
                return ResourceManager.GetString("CreateDirectoryHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template &quot;{0}&quot; could not be created.
        ///{1}.
        /// </summary>
        public static string CreateFailed {
            get {
                return ResourceManager.GetString("CreateFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The template &quot;{0}&quot; was created successfully..
        /// </summary>
        public static string CreateSuccessful {
            get {
                return ResourceManager.GetString("CreateSuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current configuration:.
        /// </summary>
        public static string CurrentConfiguration {
            get {
                return ResourceManager.GetString("CurrentConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default if option is provided without a value: {0}.
        /// </summary>
        public static string DefaultIfOptionWithoutValue {
            get {
                return ResourceManager.GetString("DefaultIfOptionWithoutValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default: {0}.
        /// </summary>
        public static string DefaultValue {
            get {
                return ResourceManager.GetString("DefaultValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default: {0} / (*) {1}.
        /// </summary>
        public static string DefaultValuePlusSwitchWithoutValueDefault {
            get {
                return ResourceManager.GetString("DefaultValuePlusSwitchWithoutValueDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete.
        /// </summary>
        public static string Delete {
            get {
                return ResourceManager.GetString("Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description: {0}.
        /// </summary>
        public static string Description {
            get {
                return ResourceManager.GetString("Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating this template will make changes to existing files:.
        /// </summary>
        public static string DestructiveChangesNotification {
            get {
                return ResourceManager.GetString("DestructiveChangesNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays help for this command..
        /// </summary>
        public static string DisplaysHelp {
            get {
                return ResourceManager.GetString("DisplaysHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays a summary of what would happen if the given command line were run if it would result in a template creation..
        /// </summary>
        public static string DryRunDescription {
            get {
                return ResourceManager.GetString("DryRunDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to After expanding the extra args files, the command is:
        ///    dotnet {0}.
        /// </summary>
        public static string ExtraArgsCommandAfterExpansion {
            get {
                return ResourceManager.GetString("ExtraArgsCommandAfterExpansion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies a file containing additional parameters..
        /// </summary>
        public static string ExtraArgsFileHelp {
            get {
                return ResourceManager.GetString("ExtraArgsFileHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Factory.
        /// </summary>
        public static string Factory {
            get {
                return ResourceManager.GetString("Factory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File actions would have been taken:.
        /// </summary>
        public static string FileActionsWouldHaveBeenTaken {
            get {
                return ResourceManager.GetString("FileActionsWouldHaveBeenTaken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Forces content to be generated even if it would change existing files..
        /// </summary>
        public static string ForcesTemplateCreation {
            get {
                return ResourceManager.GetString("ForcesTemplateCreation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generators.
        /// </summary>
        public static string Generators {
            get {
                return ResourceManager.GetString("Generators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: {0}.
        /// </summary>
        public static string GenericError {
            get {
                return ResourceManager.GetString("GenericError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot retrieve the type for {0}..
        /// </summary>
        public static string GenericPlaceholderTemplateContextError {
            get {
                return ResourceManager.GetString("GenericPlaceholderTemplateContextError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning: {0}.
        /// </summary>
        public static string GenericWarning {
            get {
                return ResourceManager.GetString("GenericWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Getting ready....
        /// </summary>
        public static string GettingReady {
            get {
                return ResourceManager.GetString("GettingReady", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Id.
        /// </summary>
        public static string Id {
            get {
                return ResourceManager.GetString("Id", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find install descriptor for template: {0}.
        /// </summary>
        public static string InstallDescriptor_NotFound {
            get {
                return ResourceManager.GetString("InstallDescriptor_NotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Currently installed items:.
        /// </summary>
        public static string InstalledItems {
            get {
                return ResourceManager.GetString("InstalledItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; could not be installed.
        ///{1}..
        /// </summary>
        public static string InstallFailed {
            get {
                return ResourceManager.GetString("InstallFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installs a source or a template pack..
        /// </summary>
        public static string InstallHelp {
            get {
                return ResourceManager.GetString("InstallHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installing updates....
        /// </summary>
        public static string InstallingUpdates {
            get {
                return ResourceManager.GetString("InstallingUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; was installed successfully..
        /// </summary>
        public static string InstallSuccessful {
            get {
                return ResourceManager.GetString("InstallSuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows the internal dotnet restore command to stop and wait for user input or action (for example to complete authentication)..
        /// </summary>
        public static string InteractiveHelp {
            get {
                return ResourceManager.GetString("InteractiveHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid input switch:.
        /// </summary>
        public static string InvalidInputSwitch {
            get {
                return ResourceManager.GetString("InvalidInputSwitch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name cannot contain any of the following characters {0} or character codes {1}.
        /// </summary>
        public static string InvalidNameParameter {
            get {
                return ResourceManager.GetString("InvalidNameParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default value &apos;{1}&apos; is not a valid value for {0}..
        /// </summary>
        public static string InvalidParameterDefault {
            get {
                return ResourceManager.GetString("InvalidParameterDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{1}&apos; is not a valid value for {0}..
        /// </summary>
        public static string InvalidParameterDetail {
            get {
                return ResourceManager.GetString("InvalidParameterDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a valid option.
        /// </summary>
        public static string InvalidParameterNameDetail {
            get {
                return ResourceManager.GetString("InvalidParameterNameDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For more information, run &apos;{0}&apos;..
        /// </summary>
        public static string InvalidParameterTemplateHint {
            get {
                return ResourceManager.GetString("InvalidParameterTemplateHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Invalid values for option(s) {0} for template {1}..
        /// </summary>
        public static string InvalidParameterValues {
            get {
                return ResourceManager.GetString("InvalidParameterValues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: Invalid option(s):.
        /// </summary>
        public static string InvalidTemplateParameterValues {
            get {
                return ResourceManager.GetString("InvalidTemplateParameterValues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filters templates based on language and specifies the language of the template to create..
        /// </summary>
        public static string LanguageParameter {
            get {
                return ResourceManager.GetString("LanguageParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lists templates containing the specified template name. If no name is specified, lists all templates..
        /// </summary>
        public static string ListsTemplates {
            get {
                return ResourceManager.GetString("ListsTemplates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To list installed templates, run &apos;dotnet {0} --list&apos;..
        /// </summary>
        public static string ListTemplatesCommand {
            get {
                return ResourceManager.GetString("ListTemplatesCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The locale to use..
        /// </summary>
        public static string LocaleHelp {
            get {
                return ResourceManager.GetString("LocaleHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mandatory option {0} missing for template {1}..
        /// </summary>
        public static string MissingRequiredParameter {
            get {
                return ResourceManager.GetString("MissingRequiredParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to locate the specified template content, the template cache may be corrupted. Try running &apos;dotnet {0} --debug:reinit&apos; to fix the issue..
        /// </summary>
        public static string MissingTemplateContentDetected {
            get {
                return ResourceManager.GetString("MissingTemplateContentDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mount Point Factories.
        /// </summary>
        public static string MountPointFactories {
            get {
                return ResourceManager.GetString("MountPointFactories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mount Points.
        /// </summary>
        public static string MountPoints {
            get {
                return ResourceManager.GetString("MountPoints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template name is the only allowed argument. Invalid argument: {0}..
        /// </summary>
        public static string MultipleArgsSpecifiedError {
            get {
                return ResourceManager.GetString("MultipleArgsSpecifiedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name for the output being created. If no name is specified, the name of the output directory is used..
        /// </summary>
        public static string NameOfOutput {
            get {
                return ResourceManager.GetString("NameOfOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (No Items).
        /// </summary>
        public static string NoItems {
            get {
                return ResourceManager.GetString("NoItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     (No Parameters).
        /// </summary>
        public static string NoParameters {
            get {
                return ResourceManager.GetString("NoParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Primary Outputs to restore..
        /// </summary>
        public static string NoPrimaryOutputsToRestore {
            get {
                return ResourceManager.GetString("NoPrimaryOutputsToRestore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No templates found matching: {0}..
        /// </summary>
        public static string NoTemplatesMatchingInputParameters {
            get {
                return ResourceManager.GetString("NoTemplatesMatchingInputParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No templates matched the input template name: {0}..
        /// </summary>
        public static string NoTemplatesMatchName {
            get {
                return ResourceManager.GetString("NoTemplatesMatchName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No updates were found..
        /// </summary>
        public static string NoUpdates {
            get {
                return ResourceManager.GetString("NoUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No updates found..
        /// </summary>
        public static string NoUpdatesFound {
            get {
                return ResourceManager.GetString("NoUpdatesFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies a NuGet source to use during install..
        /// </summary>
        public static string NuGetSourceHelp {
            get {
                return ResourceManager.GetString("NuGetSourceHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error during synchronization with the Optional SDK Workloads..
        /// </summary>
        public static string OptionalWorkloadsSyncFailed {
            get {
                return ResourceManager.GetString("OptionalWorkloadsSyncFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The list of templates was synchronized with the Optional SDK Workloads..
        /// </summary>
        public static string OptionalWorkloadsSynchronized {
            get {
                return ResourceManager.GetString("OptionalWorkloadsSynchronized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filters the templates based on the template author. Applicable only with --search or --list | -l option..
        /// </summary>
        public static string OptionDescriptionAuthorFilter {
            get {
                return ResourceManager.GetString("OptionDescriptionAuthorFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comma separated list of columns to show for --list|-l or --search option.  The supported columns are: 
        ///- language - comma separated list of languages supported by the template
        ///- tags - the list of template tags
        ///- author - the template author
        ///- type - the template type: project or item
        ///The template name and short name are shown always. 
        ///For --search option additionally NuGet package ID and total downloads count are shown always.
        ///The default list of columns shown without the option for --list | -l: tem [rest of string was truncated]&quot;;.
        /// </summary>
        public static string OptionDescriptionColumns {
            get {
                return ResourceManager.GetString("OptionDescriptionColumns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows all available columns for --list | -l or --search option, equivalent to --columns=language,tags,author,type..
        /// </summary>
        public static string OptionDescriptionColumnsAll {
            get {
                return ResourceManager.GetString("OptionDescriptionColumnsAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filters the templates based on NuGet package ID. Applicable only with --search option..
        /// </summary>
        public static string OptionDescriptionPackageFilter {
            get {
                return ResourceManager.GetString("OptionDescriptionPackageFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Searches for the templates in configured remote sources..
        /// </summary>
        public static string OptionDescriptionSearch {
            get {
                return ResourceManager.GetString("OptionDescriptionSearch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Options:.
        /// </summary>
        public static string Options {
            get {
                return ResourceManager.GetString("Options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Option variant {0} for canonical {1} was already defined for canonical {2}..
        /// </summary>
        public static string OptionVariantAlreadyDefined {
            get {
                return ResourceManager.GetString("OptionVariantAlreadyDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Location to place the generated output..
        /// </summary>
        public static string OutputPath {
            get {
                return ResourceManager.GetString("OutputPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overwrite.
        /// </summary>
        public static string Overwrite {
            get {
                return ResourceManager.GetString("Overwrite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parent.
        /// </summary>
        public static string Parent {
            get {
                return ResourceManager.GetString("Parent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some partially matched templates may not support these input switches:.
        /// </summary>
        public static string PartialTemplateMatchSwitchesNotValidForAllMatches {
            get {
                return ResourceManager.GetString("PartialTemplateMatchSwitchesNotValidForAllMatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The possible values are:.
        /// </summary>
        public static string PossibleValuesHeader {
            get {
                return ResourceManager.GetString("PossibleValuesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Actual command: {0}.
        /// </summary>
        public static string PostActionCommand {
            get {
                return ResourceManager.GetString("PostActionCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description: {0}.
        /// </summary>
        public static string PostActionDescription {
            get {
                return ResourceManager.GetString("PostActionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Post action failed..
        /// </summary>
        public static string PostActionFailedInstructionHeader {
            get {
                return ResourceManager.GetString("PostActionFailedInstructionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manual instructions: {0}.
        /// </summary>
        public static string PostActionInstructions {
            get {
                return ResourceManager.GetString("PostActionInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid input &quot;{0}&quot;. Please enter one of [{1}(yes)|{2}(no)]..
        /// </summary>
        public static string PostActionInvalidInputRePrompt {
            get {
                return ResourceManager.GetString("PostActionInvalidInputRePrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template is configured to run the following action:.
        /// </summary>
        public static string PostActionPromptHeader {
            get {
                return ResourceManager.GetString("PostActionPromptHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to run this action [{0}(yes)|{1}(no)]?.
        /// </summary>
        public static string PostActionPromptRequest {
            get {
                return ResourceManager.GetString("PostActionPromptRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Processing post-creation actions....
        /// </summary>
        public static string ProcessingPostActions {
            get {
                return ResourceManager.GetString("ProcessingPostActions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Doesn&apos;t output any status information..
        /// </summary>
        public static string QuietModeHelp {
            get {
                return ResourceManager.GetString("QuietModeHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rerun the command and pass --force to accept and create..
        /// </summary>
        public static string RerunCommandAndPassForceToCreateAnyway {
            get {
                return ResourceManager.GetString("RerunCommandAndPassForceToCreateAnyway", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore failed..
        /// </summary>
        public static string RestoreFailed {
            get {
                return ResourceManager.GetString("RestoreFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore succeeded..
        /// </summary>
        public static string RestoreSucceeded {
            get {
                return ResourceManager.GetString("RestoreSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Run dotnet {0} --help for usage information..
        /// </summary>
        public static string RunHelpForInformationAboutAcceptedParameters {
            get {
                return ResourceManager.GetString("RunHelpForInformationAboutAcceptedParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running command &apos;{0}&apos;....
        /// </summary>
        public static string RunningCommand {
            get {
                return ResourceManager.GetString("RunningCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Running &apos;dotnet restore&apos; on {0}....
        /// </summary>
        public static string RunningDotnetRestoreOn {
            get {
                return ResourceManager.GetString("RunningDotnetRestoreOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search failed: no template name is specified.
        ///To search for the template, specify template name or use one of supported filters: {0}.
        ///Examples:
        ///        dotnet {1} &lt;template name&gt; --search
        ///        dotnet {1} --search --author Microsoft
        ///        dotnet {1} &lt;template name&gt; --search --author Microsoft.
        /// </summary>
        public static string SearchOnlineErrorNoTemplateNameOrFilter {
            get {
                return ResourceManager.GetString("SearchOnlineErrorNoTemplateNameOrFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search failed: template name is too short, minimum 2 characters are required..
        /// </summary>
        public static string SearchOnlineErrorTemplateNameIsTooShort {
            get {
                return ResourceManager.GetString("SearchOnlineErrorTemplateNameIsTooShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No remoted sources defined to search for the templates..
        /// </summary>
        public static string SearchOnlineNoSources {
            get {
                return ResourceManager.GetString("SearchOnlineNoSources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Searching for the templates....
        /// </summary>
        public static string SearchOnlineNotification {
            get {
                return ResourceManager.GetString("SearchOnlineNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template &apos;{0}&apos; was not found..
        /// </summary>
        public static string SearchOnlineTemplateNotFound {
            get {
                return ResourceManager.GetString("SearchOnlineTemplateNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to         dotnet {0} -i {1}.
        /// </summary>
        public static string SearchResultInstallCommand {
            get {
                return ResourceManager.GetString("SearchResultInstallCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To use the template, run the following command to install the package: dotnet {0} -i &lt;package&gt;.
        /// </summary>
        public static string SearchResultInstallHeader {
            get {
                return ResourceManager.GetString("SearchResultInstallHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No matches found.
        /// </summary>
        public static string SearchResultNoMatches {
            get {
                return ResourceManager.GetString("SearchResultNoMatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Matches from template source: {0}.
        /// </summary>
        public static string SearchResultSourceIndicator {
            get {
                return ResourceManager.GetString("SearchResultSourceIndicator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Template name &quot;{0}&quot; ({1}) from author &quot;{2}&quot; in pack {3}.
        /// </summary>
        public static string SearchResultTemplateInfo {
            get {
                return ResourceManager.GetString("SearchResultTemplateInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To search for the templates on NuGet.org, run &apos;dotnet {0} {1} --search&apos;..
        /// </summary>
        public static string SearchTemplatesCommand {
            get {
                return ResourceManager.GetString("SearchTemplatesCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error reading the installed configuration, file may be corrupted. If this problem persists, try resetting with the `--debug:reinit&apos; flag.
        /// </summary>
        public static string SettingsReadError {
            get {
                return ResourceManager.GetString("SettingsReadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays the value of the named alias, or all aliases if no name is specified..
        /// </summary>
        public static string ShowAliasesHelp {
            get {
                return ResourceManager.GetString("ShowAliasesHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows all templates..
        /// </summary>
        public static string ShowsAllTemplates {
            get {
                return ResourceManager.GetString("ShowsAllTemplates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filters templates based on available types. Predefined values are &quot;project&quot; and &quot;item&quot;..
        /// </summary>
        public static string ShowsFilteredTemplates {
            get {
                return ResourceManager.GetString("ShowsFilteredTemplates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following option(s) or their value(s) are not valid in combination with other supplied options or their values:.
        /// </summary>
        public static string SingleTemplateGroupPartialMatchSwitchesNotValidForAllMatches {
            get {
                return ResourceManager.GetString("SingleTemplateGroupPartialMatchSwitchesNotValidForAllMatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to * Indicates the value used if the switch is provided without a value..
        /// </summary>
        public static string SwitchWithoutValueDefaultFootnote {
            get {
                return ResourceManager.GetString("SwitchWithoutValueDefaultFootnote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The template to instantiate..
        /// </summary>
        public static string TemplateArgumentHelp {
            get {
                return ResourceManager.GetString("TemplateArgumentHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following templates partially match the input. Be more specific with the template name and/or language..
        /// </summary>
        public static string TemplateMultiplePartialNameMatches {
            get {
                return ResourceManager.GetString("TemplateMultiplePartialNameMatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Templates.
        /// </summary>
        public static string Templates {
            get {
                return ResourceManager.GetString("Templates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These templates matched your input: {0}..
        /// </summary>
        public static string TemplatesFoundMatchingInputParameters {
            get {
                return ResourceManager.GetString("TemplatesFoundMatchingInputParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} template(s) partially matched, but failed on {1}..
        /// </summary>
        public static string TemplatesNotValidGivenTheSpecifiedFilter {
            get {
                return ResourceManager.GetString("TemplatesNotValidGivenTheSpecifiedFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured updating templates for: {0}.
        /// </summary>
        public static string TemplateUpdateError {
            get {
                return ResourceManager.GetString("TemplateUpdateError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This template contains technologies from parties other than Microsoft, see {0} for details..
        /// </summary>
        public static string ThirdPartyNotices {
            get {
                return ResourceManager.GetString("ThirdPartyNotices", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type.
        /// </summary>
        public static string Type {
            get {
                return ResourceManager.GetString("Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to apply permissions {0} to &quot;{1}&quot;..
        /// </summary>
        public static string UnableToSetPermissions {
            get {
                return ResourceManager.GetString("UnableToSetPermissions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstalls a source or a template pack..
        /// </summary>
        public static string UninstallHelp {
            get {
                return ResourceManager.GetString("UninstallHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Details:.
        /// </summary>
        public static string UninstallListDetailsHeader {
            get {
                return ResourceManager.GetString("UninstallListDetailsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall Command:.
        /// </summary>
        public static string UninstallListUninstallCommand {
            get {
                return ResourceManager.GetString("UninstallListUninstallCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown Change.
        /// </summary>
        public static string UnknownChangeKind {
            get {
                return ResourceManager.GetString("UnknownChangeKind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check the currently installed template packs for update, and install the updates..
        /// </summary>
        public static string UpdateApplyCommandHelp {
            get {
                return ResourceManager.GetString("UpdateApplyCommandHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating....
        /// </summary>
        public static string UpdateApplyStartMessage {
            get {
                return ResourceManager.GetString("UpdateApplyStartMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ...Update succeeded.
        /// </summary>
        public static string UpdateApplySuccessMessage {
            get {
                return ResourceManager.GetString("UpdateApplySuccessMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An update for template pack {0} is available..
        /// </summary>
        public static string UpdateAvailable {
            get {
                return ResourceManager.GetString("UpdateAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to     install command: dotnet {0} -i {1}.
        /// </summary>
        public static string UpdateCheck_InstallCommand {
            get {
                return ResourceManager.GetString("UpdateCheck_InstallCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured checking for updates for template pack {0}.
        /// </summary>
        public static string UpdateCheck_UnknownError {
            get {
                return ResourceManager.GetString("UpdateCheck_UnknownError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check the currently installed template packs for updates..
        /// </summary>
        public static string UpdateCheckCommandHelp {
            get {
                return ResourceManager.GetString("UpdateCheckCommandHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No update checker(s) for the following:.
        /// </summary>
        public static string UpdateCheckerNotAvailable {
            get {
                return ResourceManager.GetString("UpdateCheckerNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occured checking for {0} template updates..
        /// </summary>
        public static string UpdateCheckError {
            get {
                return ResourceManager.GetString("UpdateCheckError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update matching templates..
        /// </summary>
        public static string UpdateHelp {
            get {
                return ResourceManager.GetString("UpdateHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updates are available for the following:.
        /// </summary>
        public static string UpdatesAvailableListHeader {
            get {
                return ResourceManager.GetString("UpdatesAvailableListHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version:.
        /// </summary>
        public static string Version {
            get {
                return ResourceManager.GetString("Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify if post action scripts should run..
        /// </summary>
        public static string WhetherToAllowScriptsToRun {
            get {
                return ResourceManager.GetString("WhetherToAllowScriptsToRun", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About to create: .
        /// </summary>
        public static string WillCreateTemplate {
            get {
                return ResourceManager.GetString("WillCreateTemplate", resourceCulture);
            }
        }
    }
}

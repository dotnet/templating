<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AliasCreated" xml:space="preserve">
    <value>Successfully created alias named '{0}' with value '{1}'</value>
  </data>
  <data name="ArgsFileNotFound" xml:space="preserve">
    <value>The specified extra args file does not exist: {0}.</value>
  </data>
  <data name="ArgsFileWrongFormat" xml:space="preserve">
    <value>Extra args file {0} is not formatted properly.</value>
  </data>
  <data name="Assembly" xml:space="preserve">
    <value>Assembly</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>Author: {0}</value>
  </data>
  <data name="Change" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="CommandDescription" xml:space="preserve">
    <value>Template Instantiation Commands for .NET CLI</value>
  </data>
  <data name="ConfiguredValue" xml:space="preserve">
    <value>Configured Value: {0}</value>
  </data>
  <data name="CreateFailed" xml:space="preserve">
    <value>Template "{0}" could not be created.
{1}</value>
  </data>
  <data name="CreateSuccessful" xml:space="preserve">
    <value>The template "{0}" was created successfully.</value>
  </data>
  <data name="CurrentConfiguration" xml:space="preserve">
    <value>Current configuration:</value>
  </data>
  <data name="DefaultValue" xml:space="preserve">
    <value>Default: {0}</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description: {0}</value>
  </data>
  <data name="DestructiveChangesNotification" xml:space="preserve">
    <value>Creating this template will make changes to existing files:</value>
  </data>
  <data name="DisplaysHelp" xml:space="preserve">
    <value>Displays help for this command.</value>
  </data>
  <data name="OptionDescriptionForce" xml:space="preserve">
    <value>Forces content to be generated even if it would change existing files.</value>
  </data>
  <data name="Generators" xml:space="preserve">
    <value>Generators</value>
  </data>
  <data name="InstallHelp" xml:space="preserve">
    <value>Installs a source or a template package.</value>
  </data>
  <data name="InvalidParameterDetail" xml:space="preserve">
    <value>'{1}' is not a valid value for {0}.</value>
  </data>
  <data name="InvalidCommandOptions" xml:space="preserve">
    <value>Error: Invalid option(s):</value>
  </data>
  <data name="ColumnNameLanguage" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="OptionDescriptionLanguageFilter" xml:space="preserve">
    <value>Filters templates based on language and specifies the language of the template to create.</value>
  </data>
  <data name="ListsTemplates" xml:space="preserve">
    <value>Lists templates containing the specified template name. If no name is specified, lists all templates.</value>
  </data>
  <data name="MissingRequiredParameter" xml:space="preserve">
    <value>Mandatory option {0} missing for template {1}.</value>
  </data>
  <data name="MountPointFactories" xml:space="preserve">
    <value>Mount Point Factories</value>
  </data>
  <data name="OptionDescriptionName" xml:space="preserve">
    <value>The name for the output being created. If no name is specified, the name of the output directory is used.</value>
  </data>
  <data name="NoItems" xml:space="preserve">
    <value>(No Items)</value>
  </data>
  <data name="NoParameters" xml:space="preserve">
    <value>    (No Parameters)</value>
  </data>
  <data name="NoTemplatesMatchingInputParameters" xml:space="preserve">
    <value>No templates found matching: {0}.</value>
  </data>
  <data name="OptionalWorkloadsSyncFailed" xml:space="preserve">
    <value>Error during synchronization with the Optional SDK Workloads.</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>Options:</value>
  </data>
  <data name="OptionDescriptionOutput" xml:space="preserve">
    <value>Location to place the generated output.</value>
  </data>
  <data name="Overwrite" xml:space="preserve">
    <value>Overwrite</value>
  </data>
  <data name="RerunCommandAndPassForceToCreateAnyway" xml:space="preserve">
    <value>Rerun the command and pass --force to accept and create.</value>
  </data>
  <data name="RunHelpForInformationAboutAcceptedParameters" xml:space="preserve">
    <value>For usage information, run: </value>
  </data>
  <data name="ColumnNameShortName" xml:space="preserve">
    <value>Short Name</value>
  </data>
  <data name="ShowsAllTemplates" xml:space="preserve">
    <value>Shows all templates.</value>
  </data>
  <data name="OptionDescriptionTypeFilter" xml:space="preserve">
    <value>Filters templates based on available types. Predefined values are "project" and "item".</value>
  </data>
  <data name="ColumnNameTags" xml:space="preserve">
    <value>Tags</value>
  </data>
  <data name="Templates" xml:space="preserve">
    <value>Templates</value>
  </data>
  <data name="TemplatesFoundMatchingInputParameters" xml:space="preserve">
    <value>These templates matched your input: {0}</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="UnknownChangeKind" xml:space="preserve">
    <value>Unknown Change</value>
  </data>
  <data name="TemplatePackageCoordinator_Update_Info_UpdateAvailable" xml:space="preserve">
    <value>An update for template package '{0}' is available.</value>
  </data>
  <data name="NoPrimaryOutputsToRestore" xml:space="preserve">
    <value>No Primary Outputs to restore.</value>
  </data>
  <data name="CommandFailed" xml:space="preserve">
    <value>Command failed.</value>
  </data>
  <data name="CommandOutput" xml:space="preserve">
    <value>Output from command:</value>
  </data>
  <data name="CommandSucceeded" xml:space="preserve">
    <value>Command succeeded.</value>
  </data>
  <data name="RestoreFailed" xml:space="preserve">
    <value>Restore failed.</value>
  </data>
  <data name="RestoreSucceeded" xml:space="preserve">
    <value>Restore succeeded.</value>
  </data>
  <data name="RunningDotnetRestoreOn" xml:space="preserve">
    <value>Running 'dotnet restore' on {0}...</value>
  </data>
  <data name="RunningCommand" xml:space="preserve">
    <value>Running command '{0}'...</value>
  </data>
  <data name="PostActionInvalidInputRePrompt" xml:space="preserve">
    <value>Invalid input "{0}". Please enter one of [{1}(yes)|{2}(no)].</value>
  </data>
  <data name="PostActionPromptHeader" xml:space="preserve">
    <value>Template is configured to run the following action:</value>
  </data>
  <data name="PostActionPromptRequest" xml:space="preserve">
    <value>Do you want to run this action [{0}(yes)|{1}(no)]?</value>
  </data>
  <data name="ProcessingPostActions" xml:space="preserve">
    <value>Processing post-creation actions...</value>
  </data>
  <data name="OptionDescriptionAllowScripts" xml:space="preserve">
    <value>Specify if post action scripts should run.</value>
  </data>
  <data name="AllowScriptsNoChoice" xml:space="preserve">
    <value>Do not allow scripts to run</value>
  </data>
  <data name="AllowScriptsPromptChoice" xml:space="preserve">
    <value>Ask before running each script</value>
  </data>
  <data name="AllowScriptsYesChoice" xml:space="preserve">
    <value>Allow scripts to run</value>
  </data>
  <data name="PostActionCommand" xml:space="preserve">
    <value>Actual command: {0}</value>
  </data>
  <data name="PostActionDescription" xml:space="preserve">
    <value>Description: {0}</value>
  </data>
  <data name="PostActionInstructions" xml:space="preserve">
    <value>Manual instructions: {0}</value>
  </data>
  <data name="ThirdPartyNotices" xml:space="preserve">
    <value>This template contains technologies from parties other than Microsoft, see {0} for details.</value>
  </data>
  <data name="UninstallHelp" xml:space="preserve">
    <value>Uninstalls a source or a template package.</value>
  </data>
  <data name="TemplatePackageCoordinator_Uninstall_Error_GenericError" xml:space="preserve">
    <value>Failed to uninstall {0}, reason: {1}.</value>
  </data>
  <data name="InvalidParameterDefault" xml:space="preserve">
    <value>The default value '{1}' is not a valid value for {0}.</value>
  </data>
  <data name="AddRefPostActionFailed" xml:space="preserve">
    <value>Failed to add reference {0} to project file {1}</value>
  </data>
  <data name="AddRefPostActionAddProjectRef" xml:space="preserve">
    <value>Adding a project reference. Running dotnet add {0} reference {1}</value>
  </data>
  <data name="AddRefPostActionSucceeded" xml:space="preserve">
    <value>Successfully added
    reference: {0}
    to project file: {1}</value>
  </data>
  <data name="PostActionFailedInstructionHeader" xml:space="preserve">
    <value>Post action failed.</value>
  </data>
  <data name="AddRefPostActionAddPackageRef" xml:space="preserve">
    <value>Adding a package reference. Running dotnet add {0} package {1}</value>
  </data>
  <data name="AddRefPostActionMisconfigured" xml:space="preserve">
    <value>Add reference action is not configured correctly in the template.</value>
  </data>
  <data name="AddRefPostActionUnsupportedRefType" xml:space="preserve">
    <value>Adding reference type {0} is not supported.</value>
  </data>
  <data name="AddRefPostActionAddPackageRefWithVersion" xml:space="preserve">
    <value>Adding a package reference. Running dotnet add {0} package {1} --version {2}</value>
  </data>
  <data name="AddRefPostActionUnresolvedProjFile" xml:space="preserve">
    <value>Unable to determine which project file to add the reference to.</value>
  </data>
  <data name="AddRefPostActionProjFileListHeader" xml:space="preserve">
    <value>Project files found:</value>
  </data>
  <data name="AliasName" xml:space="preserve">
    <value>Alias Name</value>
  </data>
  <data name="AliasValue" xml:space="preserve">
    <value>Alias Value</value>
  </data>
  <data name="AliasNameContainsInvalidCharacters" xml:space="preserve">
    <value>Alias names can only contain letters, numbers, underscores, and periods.</value>
  </data>
  <data name="AliasCannotBeShortName" xml:space="preserve">
    <value>Alias '{0}' is a template short name, and therefore cannot be aliased.</value>
  </data>
  <data name="AliasCommandAfterExpansion" xml:space="preserve">
    <value>After expanding aliases, the command is:
    dotnet {0}</value>
  </data>
  <data name="AliasExpandedCommandParseError" xml:space="preserve">
    <value>Command is invalid after expanding aliases.</value>
  </data>
  <data name="AliasExpansionError" xml:space="preserve">
    <value>Error expanding aliases on input params.</value>
  </data>
  <data name="ExtraArgsCommandAfterExpansion" xml:space="preserve">
    <value>After expanding the extra args files, the command is:
    dotnet {0}</value>
  </data>
  <data name="AliasCycleError" xml:space="preserve">
    <value>Alias not created. It would have created an alias cycle, resulting in infinite expansion.</value>
  </data>
  <data name="AliasNotCreatedInvalidInput" xml:space="preserve">
    <value>Alias not created. The input was invalid.</value>
  </data>
  <data name="AliasRemoved" xml:space="preserve">
    <value>Successfully removed alias named '{0}' whose value was '{1}'.</value>
  </data>
  <data name="AliasShowAllAliasesHeader" xml:space="preserve">
    <value>All Aliases:</value>
  </data>
  <data name="AliasShowErrorUnknownAlias" xml:space="preserve">
    <value>Unknown alias name '{0}'.
Run 'dotnet {1} --show-aliases' with no args to show all aliases.</value>
  </data>
  <data name="AliasUpdated" xml:space="preserve">
    <value>Successfully updated alias named '{0}' to value '{1}'.</value>
  </data>
  <data name="AliasValueFirstArgError" xml:space="preserve">
    <value>First argument of an alias value must begin with a letter or digit.</value>
  </data>
  <data name="AliasRemoveNonExistentFailed" xml:space="preserve">
    <value>Unable to remove alias '{0}'. It did not exist.</value>
  </data>
  <data name="AddRefPostActionFrameworkNotSupported" xml:space="preserve">
    <value>Unable to automatically add the framework reference {0} to the project. Manually edit the project file to add it.</value>
  </data>
  <data name="AddProjToSlnPostActionFailed" xml:space="preserve">
    <value>Failed to add project(s) {0} to solution file {1}, solution folder {2}.</value>
  </data>
  <data name="AddProjToSlnPostActionNoProjFiles" xml:space="preserve">
    <value>Add project reference to solution action is not configured correctly in the template. Unable to determine the project files to add.</value>
  </data>
  <data name="AddProjToSlnPostActionRunning" xml:space="preserve">
    <value>Adding project reference(s) to solution file. Running {0}</value>
  </data>
  <data name="AddProjToSlnPostActionSucceeded" xml:space="preserve">
    <value>Successfully added
    project(s): {0}
    to solution file: {1}
    solution folder: {2}</value>
  </data>
  <data name="AddProjToSlnPostActionUnresolvedSlnFile" xml:space="preserve">
    <value>Unable to determine which solution file to add the reference to.</value>
  </data>
  <data name="UnableToSetPermissions" xml:space="preserve">
    <value>Unable to apply permissions {0} to "{1}".</value>
  </data>
  <data name="PartialTemplateMatchSwitchesNotValidForAllMatches" xml:space="preserve">
    <value>Some partially matched templates may not support these input switches:</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Version:</value>
  </data>
  <data name="TemplatePackageCoordinator_Uninstall_Info_InstalledItems" xml:space="preserve">
    <value>Currently installed items:</value>
  </data>
  <data name="SettingsReadError" xml:space="preserve">
    <value>Error reading the installed configuration, file may be corrupted. If this problem persists, try resetting with the `--debug:reinit' flag</value>
  </data>
  <data name="SingleTemplateGroupPartialMatchSwitchesNotValidForAllMatches" xml:space="preserve">
    <value>The following option(s) or their value(s) are not valid in combination with other supplied options or their values:</value>
  </data>
  <data name="Authoring_AmbiguousBestPrecedence" xml:space="preserve">
    <value>Equal highest precedence values among the best template matches prevented unambiguously choosing a template to invoke.</value>
  </data>
  <data name="Authoring_AmbiguousChoiceParameterValue" xml:space="preserve">
    <value>An ambiguous choice parameter value prevented unambiguously choosing a template to invoke.</value>
  </data>
  <data name="OptionDescriptionNuGetSource" xml:space="preserve">
    <value>Specifies a NuGet source to use during install.</value>
  </data>
  <data name="DefaultIfOptionWithoutValue" xml:space="preserve">
    <value>Default if option is provided without a value: {0}</value>
  </data>
  <data name="OptionDescriptionDryRun" xml:space="preserve">
    <value>Displays a summary of what would happen if the given command line were run if it would result in a template creation.</value>
  </data>
  <data name="ActionWouldHaveBeenTakenAutomatically" xml:space="preserve">
    <value>Action would have been taken automatically:</value>
  </data>
  <data name="FileActionsWouldHaveBeenTaken" xml:space="preserve">
    <value>File actions would have been taken:</value>
  </data>
  <data name="MissingTemplateContentDetected" xml:space="preserve">
    <value>Unable to locate the specified template content, the template cache may be corrupted. Try running 'dotnet {0} --debug:reinit' to fix the issue.</value>
  </data>
  <data name="InvalidNameParameter" xml:space="preserve">
    <value>Name cannot contain any of the following characters {0} or character codes {1}</value>
  </data>
  <data name="CouldntDetermineFilesToRestore" xml:space="preserve">
    <value>Couldn't determine files to restore.</value>
  </data>
  <data name="TemplatePackageCoordinator_Uninstall_Info_DetailsHeader" xml:space="preserve">
    <value>Details:</value>
  </data>
  <data name="TemplatePackageCoordinator_Uninstall_Info_UninstallCommandHint" xml:space="preserve">
    <value>Uninstall Command:</value>
  </data>
  <data name="TemplatePackageCoordinator_Error_PackageForTemplateNotFound" xml:space="preserve">
    <value>Could not find the template package containing template '{0}'</value>
  </data>
  <data name="CliTemplateSearchCoordinator_Info_SearchInProgress" xml:space="preserve">
    <value>Searching for the templates...</value>
  </data>
  <data name="CliTemplateSearchCoordinator_Info_InstallHelp" xml:space="preserve">
    <value>To use the template, run the following command to install the package:</value>
  </data>
  <data name="CliTemplateSearchCoordinator_Info_MatchesFromSource" xml:space="preserve">
    <value>Matches from template source: {0}</value>
  </data>
  <data name="UpdateApplyCommandHelp" xml:space="preserve">
    <value>Check the currently installed template packages for update, and install the updates.</value>
  </data>
  <data name="UpdateCheckCommandHelp" xml:space="preserve">
    <value>Check the currently installed template packages for updates.</value>
  </data>
  <data name="OptionDescriptionInteractive" xml:space="preserve">
    <value>Allows the command to stop and wait for user input or action (for example to complete authentication).</value>
  </data>
  <data name="TemplatesNotValidGivenTheSpecifiedFilter" xml:space="preserve">
    <value>{0} template(s) partially matched, but failed on {1}.</value>
  </data>
  <data name="InvalidParameterTemplateHint" xml:space="preserve">
    <value>For more information, run:</value>
  </data>
  <data name="ListTemplatesCommand" xml:space="preserve">
    <value>To list installed templates, run:</value>
  </data>
  <data name="ColumnNameAuthor" xml:space="preserve">
    <value>Author</value>
  </data>
  <data name="ColumnNamesAreNotSupported" xml:space="preserve">
    <value>The column {0} is/are not supported, the supported columns are: {1}.</value>
  </data>
  <data name="ColumnNameType" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="OptionDescriptionColumns" xml:space="preserve">
    <value>Comma separated list of columns to display in --list and --search output. 
The supported columns are: language, tags, author, type.</value>
  </data>
  <data name="OptionDescriptionColumnsAll" xml:space="preserve">
    <value>Display all columns in --list and --search output.</value>
  </data>
  <data name="OptionDescriptionSearch" xml:space="preserve">
    <value>Searches for the templates on NuGet.org.</value>
  </data>
  <data name="CliTemplateSearchCoordinator_Error_NoSources" xml:space="preserve">
    <value>No remoted sources defined to search for the templates.</value>
  </data>
  <data name="CliTemplateSearchCoordinator_Error_NotFound" xml:space="preserve">
    <value>Template '{0}' was not found.</value>
  </data>
  <data name="OptionDescriptionAuthorFilter" xml:space="preserve">
    <value>Filters the templates based on the template author. Applicable only with --search or --list | -l option.</value>
  </data>
  <data name="OptionDescriptionPackageFilter" xml:space="preserve">
    <value>Filters the templates based on NuGet package ID. Applies to --search.</value>
  </data>
  <data name="CliTemplateSearchCoordinator_Error_TemplateNameIsTooShort" xml:space="preserve">
    <value>Search failed: template name is too short, minimum 2 characters are required.</value>
  </data>
  <data name="ColumnNamePackage" xml:space="preserve">
    <value>Package</value>
  </data>
  <data name="ColumnNameTemplateName" xml:space="preserve">
    <value>Template Name</value>
  </data>
  <data name="ColumnNameTotalDownloads" xml:space="preserve">
    <value>Downloads</value>
  </data>
  <data name="SearchTemplatesCommand" xml:space="preserve">
    <value>To search for the templates on NuGet.org, run:</value>
  </data>
  <data name="AmbiguousParameterDetail" xml:space="preserve">
    <value>The value '{1}' is ambiguous for option {0}.</value>
  </data>
  <data name="AmbiguousTemplateGroupListHeader" xml:space="preserve">
    <value>Unable to resolve the template, these templates matched your input:</value>
  </data>
  <data name="AmbiguousTemplateGroupListHint" xml:space="preserve">
    <value>Re-run the command using the template's exact short name.</value>
  </data>
  <data name="AmbiguousTemplatesHeader" xml:space="preserve">
    <value>Unable to resolve the template, the following installed templates are conflicting:</value>
  </data>
  <data name="AmbiguousTemplatesMultiplePackagesHint" xml:space="preserve">
    <value>Uninstall the templates or the packages to keep only one template from the list.</value>
  </data>
  <data name="AmbiguousTemplatesSamePackageHint" xml:space="preserve">
    <value>The package {0} is not correct, uninstall it and report the issue to the package author.</value>
  </data>
  <data name="ColumnNameIdentity" xml:space="preserve">
    <value>Identity</value>
  </data>
  <data name="ColumnNamePrecedence" xml:space="preserve">
    <value>Precedence</value>
  </data>
  <data name="InvalidParameterNameDetail" xml:space="preserve">
    <value>'{0}' is not a valid option</value>
  </data>
  <data name="PossibleValuesHeader" xml:space="preserve">
    <value>The possible values are:</value>
  </data>
  <data name="AmbiguousLanguageHint" xml:space="preserve">
    <value>Re-run the command specifying the language to use with --language option.</value>
  </data>
  <data name="TemplatePackageCoordinator_lnstall_Error_DownloadFailed" xml:space="preserve">
    <value>{0} could not be installed, download failed.</value>
  </data>
  <data name="TemplatePackageCoordinator_lnstall_Error_GenericError" xml:space="preserve">
    <value>{0} could not be installed.</value>
  </data>
  <data name="TemplatePackageCoordinator_lnstall_Error_InvalidNuGetFeeds" xml:space="preserve">
    <value>{0} could not be installed, no NuGet feeds are configured or they are invalid.</value>
  </data>
  <data name="TemplatePackageCoordinator_lnstall_Error_PackageNotFound" xml:space="preserve">
    <value>{0} could not be installed, the package does not exist.</value>
  </data>
  <data name="TemplatePackageCoordinator_lnstall_Error_UnsupportedRequest" xml:space="preserve">
    <value>{0} is not supported.</value>
  </data>
  <data name="GenericError" xml:space="preserve">
    <value>Error: {0}</value>
  </data>
  <data name="GenericWarning" xml:space="preserve">
    <value>Warning: {0}</value>
  </data>
  <data name="OptionDescriptionTagFilter" xml:space="preserve">
    <value>Filters the templates based on the tag. Applies to --search and --list.</value>
  </data>
  <data name="TemplatePackageCoordinator_Error_PackageNameContainsTemplates" xml:space="preserve">
    <value>{0} (contains {1} templates)</value>
  </data>
  <data name="TemplatePackageCoordinator_Error_PackageNotFound" xml:space="preserve">
    <value>The template package '{0}' is not found.</value>
  </data>
  <data name="TemplatePackageCoordinator_Error_TemplateIncludedToPackages" xml:space="preserve">
    <value>The template '{0}' is included to the packages:</value>
  </data>
  <data name="TemplatePackageCoordinator_Install_Error_FoundNoPackagesToInstall" xml:space="preserve">
    <value>Found no template packages to install.</value>
  </data>
  <data name="TemplatePackageCoordinator_Install_Info_PackagesToBeInstalled" xml:space="preserve">
    <value>The following template packages will be installed:</value>
  </data>
  <data name="TemplatePackageCoordinator_lnstall_Error_AlreadyInstalled" xml:space="preserve">
    <value>{0} is already installed.</value>
  </data>
  <data name="TemplatePackageCoordinator_lnstall_Error_InvalidPackage" xml:space="preserve">
    <value>Failed to install {0}, failed to uninstall previous version of the template package.</value>
  </data>
  <data name="TemplatePackageCoordinator_lnstall_Error_UninstallFailed" xml:space="preserve">
    <value>Failed to install {0}, the template package is invalid.</value>
  </data>
  <data name="TemplatePackageCoordinator_lnstall_Info_Success" xml:space="preserve">
    <value>Success: {0} installed the following templates:</value>
  </data>
  <data name="TemplatePackageCoordinator_Uninstall_Error_ListPackagesHeader" xml:space="preserve">
    <value>To list installed template packages use:</value>
  </data>
  <data name="TemplatePackageCoordinator_Uninstall_Error_UninstallCommandHeader" xml:space="preserve">
    <value>To uninstall the template package use:</value>
  </data>
  <data name="TemplatePackageCoordinator_Uninstall_Info_Success" xml:space="preserve">
    <value>Success: {0} was uninstalled.</value>
  </data>
  <data name="TemplatePackageCoordinator_Update_Error_GenericError" xml:space="preserve">
    <value>Failed to check update for {0}: {1}.</value>
  </data>
  <data name="TemplatePackageCoordinator_Update_Error_InvalidNuGetFeeds" xml:space="preserve">
    <value>Failed to check update for {0}: no NuGet feeds are configured or they are invalid.</value>
  </data>
  <data name="TemplatePackageCoordinator_Update_Error_PackageNotFound" xml:space="preserve">
    <value>Failed to check update for {0}: the package is not available in configured NuGet feeds.</value>
  </data>
  <data name="TemplatePackageCoordinator_Update_Error_PackageNotSupported" xml:space="preserve">
    <value>Failed to check update for {0}: the package is not supported.</value>
  </data>
  <data name="TemplatePackageCoordinator_Update_Info_AllPackagesAreUpToDate" xml:space="preserve">
    <value>All template packages are up-to-date.</value>
  </data>
  <data name="TemplatePackageCoordinator_Update_Info_PackagesToBeUpdated" xml:space="preserve">
    <value>The following template packages will be updated:</value>
  </data>
  <data name="TemplatePackageCoordinator_Verbose_NuGetCredentialServiceError" xml:space="preserve">
    <value>Failed to initialize NuGet credential service, details: {0}.</value>
  </data>
  <data name="TemplatePackageCoordinator_Install_Error_SameInstallRequests" xml:space="preserve">
    <value>The command is attempting to install the template package '{0}' twice, check the arguments and retry.</value>
  </data>
  <data name="Generic_Details" xml:space="preserve">
    <value>Details: {0}</value>
  </data>
  <data name="TemplateResolver_Warning_FailedToReparseTemplate" xml:space="preserve">
    <value>[Warning]: Failed to parse input for template {0}, it will be skipped from further processing.</value>
  </data>
  <data name="ColumnNameCurrentVersion" xml:space="preserve">
    <value>Current</value>
  </data>
  <data name="ColumnNameLatestVersion" xml:space="preserve">
    <value>Latest</value>
  </data>
  <data name="TemplatePackageCoordinator_Update_Info_UpdateAllCommandHeader" xml:space="preserve">
    <value>To update all the packages use:</value>
  </data>
  <data name="TemplatePackageCoordinator_Update_Info_UpdateAvailablePackages" xml:space="preserve">
    <value>An update for template packages is available:</value>
  </data>
  <data name="TemplatePackageCoordinator_Update_Info_UpdateSingleCommandHeader" xml:space="preserve">
    <value>To update the package use:</value>
  </data>
  <data name="OptionDescriptionNoUpdateCheck" xml:space="preserve">
    <value>Disables checking for the template package updates when instantiating a template.</value>
  </data>
  <data name="PostActionDispatcher_Error_NotSupported" xml:space="preserve">
    <value>The post action {0} is not supported.</value>
  </data>
  <data name="PostActionDispatcher_Error_RunScriptNotAllowed" xml:space="preserve">
    <value>Execution of 'Run script' post action is not allowed.</value>
  </data>
  <data name="PostAction_ProcessStartProcessor_Error_ConfigMissingExecutable" xml:space="preserve">
    <value>Failed to run the command: argument 'executable' is missing in post action configuration.</value>
  </data>
  <data name="TemplatePackageCoordinator_lnstall_Warning_No_Templates_In_Package" xml:space="preserve">
    <value>No templates were found in the package {0}.</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="TemplateInformationCoordinator_DotnetNew_Description" xml:space="preserve">
    <value>The '{0}' command creates a .NET project based on a template.</value>
  </data>
  <data name="TemplateInformationCoordinator_DotnetNew_ExampleHeader" xml:space="preserve">
    <value>An example would be:</value>
  </data>
  <data name="TemplateInformationCoordinator_DotnetNew_DisplayOptionsHint" xml:space="preserve">
    <value>Display template options with:</value>
  </data>
  <data name="TemplateInformationCoordinator_DotnetNew_ListTemplatesHint" xml:space="preserve">
    <value>Display all installed templates with:</value>
  </data>
  <data name="TemplateInformationCoordinator_DotnetNew_SearchTemplatesHint" xml:space="preserve">
    <value>Display templates available on NuGet.org with:</value>
  </data>
  <data name="TemplateInformationCoordinator_DotnetNew_TemplatesHeader" xml:space="preserve">
    <value>Common templates are:</value>
  </data>
  <data name="CliTemplateSearchCoordinator_Error_NoTemplateName" xml:space="preserve">
    <value>Search failed: not enough information specified for search.</value>
  </data>
  <data name="CliTemplateSearchCoordinator_Info_SearchHelp" xml:space="preserve">
    <value>To search for templates, specify partial template name or use one of supported filters: {0}.</value>
  </data>
  <data name="Generic_ExampleHeader" xml:space="preserve">
    <value>Example:</value>
  </data>
  <data name="Generic_ExamplesHeader" xml:space="preserve">
    <value>Examples:</value>
  </data>
  <data name="TemplateInformationCoordinator_TemplateHelp_Info_HelpForOtherLanguagesHint" xml:space="preserve">
    <value>To see help for other template languages ({0}), use --language option:</value>
    <comment>{0} is comma-separated list of supported programming languages by template. --language should not be translated.</comment>
  </data>
  <data name="Generic_Empty" xml:space="preserve">
    <value>(empty)</value>
    <comment>shown when there is no data to show</comment>
  </data>
  <data name="CliTemplateSearchCoordinator_Error_SearchFailure" xml:space="preserve">
    <value>Search failed: {0}</value>
    <comment>0 - localized error message</comment>
  </data>
  <data name="InvalidSyntax" xml:space="preserve">
    <value>Invalid command syntax: use '{0}' instead.</value>
    <comment>{0} - command syntax, example: dotnet new [PARTIAL_NAME] --list [FILTER_OPTIONS].</comment>
  </data>
  <data name="HostSpecificDataLoader_Warning_FailedToRead" xml:space="preserve">
    <value>Failed to load dotnet CLI host data for template {0} from cache.</value>
    <comment>{0} - template short name</comment>
  </data>
  <data name="HostSpecificDataLoader_Warning_FailedToReadFromFile" xml:space="preserve">
    <value>Failed to load dotnet CLI host data for template {0} from {1}. The host data will be ignored.</value>
    <comment>{0} - template short name, {1} - file path to host data.</comment>
  </data>
  <data name="OptionDescriptionBaseline" xml:space="preserve">
    <value>Filters the templates based on baseline defined in the template.</value>
  </data>
  <data name="OptionDescriptionCheckOnly" xml:space="preserve">
    <value>Only check for updates and display the template packages to be updated without applying update.</value>
  </data>
  <data name="Commands_Validator_WrongTokens" xml:space="preserve">
    <value>Unrecognized command or argument(s): {0}</value>
    <comment>{0} - wrong token or comma-separated tokens (if multiple). Each token is enclosed with single quotes: 'token'.</comment>
  </data>
</root>

#nullable enable
Microsoft.TemplateEngine.IDE.Bootstrapper
Microsoft.TemplateEngine.IDE.Bootstrapper.AddComponent(System.Type! interfaceType, Microsoft.TemplateEngine.Abstractions.IIdentifiedComponent! component) -> void
Microsoft.TemplateEngine.IDE.Bootstrapper.CreateAsync(Microsoft.TemplateEngine.Abstractions.ITemplateInfo! info, string! name, string! outputPath, System.Collections.Generic.IReadOnlyDictionary<string!, string?>! parameters, bool skipUpdateCheck, string! baselineName) -> System.Threading.Tasks.Task<Microsoft.TemplateEngine.Abstractions.ICreationResult?>!
Microsoft.TemplateEngine.IDE.Bootstrapper.CreateAsync(Microsoft.TemplateEngine.Abstractions.ITemplateInfo! info, string? name, string! outputPath, System.Collections.Generic.IReadOnlyDictionary<string!, string?>! parameters, string? baselineName = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Microsoft.TemplateEngine.Edge.Template.ITemplateCreationResult!>!
Microsoft.TemplateEngine.IDE.Bootstrapper.Dispose() -> void
Microsoft.TemplateEngine.IDE.Bootstrapper.GetCreationEffectsAsync(Microsoft.TemplateEngine.Abstractions.ITemplateInfo! info, string! name, string! outputPath, System.Collections.Generic.IReadOnlyDictionary<string!, string?>! parameters, string! baselineName) -> System.Threading.Tasks.Task<Microsoft.TemplateEngine.Abstractions.ICreationEffects?>!
Microsoft.TemplateEngine.IDE.Bootstrapper.GetCreationEffectsAsync(Microsoft.TemplateEngine.Abstractions.ITemplateInfo! info, string? name, string! outputPath, System.Collections.Generic.IReadOnlyDictionary<string!, string?>! parameters, string? baselineName = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<Microsoft.TemplateEngine.Edge.Template.ITemplateCreationResult!>!
Microsoft.TemplateEngine.IDE.Bootstrapper.GetLatestVersionsAsync(System.Collections.Generic.IEnumerable<Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackage!>! managedPackages, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyList<Microsoft.TemplateEngine.Abstractions.Installer.CheckUpdateResult!>!>!
Microsoft.TemplateEngine.IDE.Bootstrapper.Install(params string![]! paths) -> void
Microsoft.TemplateEngine.IDE.Bootstrapper.Install(string! path) -> void
Microsoft.TemplateEngine.IDE.Bootstrapper.Install(System.Collections.Generic.IEnumerable<string!>! paths) -> void
Microsoft.TemplateEngine.IDE.Bootstrapper.InstallTemplatePackagesAsync(System.Collections.Generic.IEnumerable<Microsoft.TemplateEngine.Abstractions.Installer.InstallRequest!>! installRequests, Microsoft.TemplateEngine.Edge.Settings.InstallationScope scope = Microsoft.TemplateEngine.Edge.Settings.InstallationScope.Global, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyList<Microsoft.TemplateEngine.Abstractions.Installer.InstallResult!>!>!
Microsoft.TemplateEngine.IDE.Bootstrapper.ListTemplates(bool exactMatchesOnly, params System.Func<Microsoft.TemplateEngine.Abstractions.ITemplateInfo!, Microsoft.TemplateEngine.Edge.Template.MatchInfo?>![]! filters) -> System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyCollection<Microsoft.TemplateEngine.Edge.Template.IFilteredTemplateInfo!>!>!
Microsoft.TemplateEngine.IDE.Bootstrapper.LoadDefaultComponents() -> void
Microsoft.TemplateEngine.IDE.Bootstrapper.Register(System.Reflection.Assembly! assembly) -> void
Microsoft.TemplateEngine.IDE.Bootstrapper.Register(System.Type! type) -> void
Microsoft.TemplateEngine.IDE.Bootstrapper.Uninstall(params string![]! paths) -> System.Collections.Generic.IEnumerable<string!>!
Microsoft.TemplateEngine.IDE.Bootstrapper.Uninstall(string! path) -> System.Collections.Generic.IEnumerable<string!>!
Microsoft.TemplateEngine.IDE.Bootstrapper.Uninstall(System.Collections.Generic.IEnumerable<string!>! paths) -> System.Collections.Generic.IEnumerable<string!>!
Microsoft.TemplateEngine.IDE.Bootstrapper.UninstallTemplatePackagesAsync(System.Collections.Generic.IEnumerable<Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackage!>! managedPackages, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyList<Microsoft.TemplateEngine.Abstractions.Installer.UninstallResult!>!>!
Microsoft.TemplateEngine.IDE.Bootstrapper.UpdateTemplatePackagesAsync(System.Collections.Generic.IEnumerable<Microsoft.TemplateEngine.Abstractions.Installer.UpdateRequest!>! updateRequests, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyList<Microsoft.TemplateEngine.Abstractions.Installer.UpdateResult!>!>!
Microsoft.TemplateEngine.IDE.Bootstrapper.Bootstrapper(Microsoft.TemplateEngine.Abstractions.ITemplateEngineHost! host, bool virtualizeConfiguration, bool loadDefaultComponents = true, string? hostSettingsLocation = null) -> void
Microsoft.TemplateEngine.IDE.Bootstrapper.GetManagedTemplatePackagesAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyList<Microsoft.TemplateEngine.Abstractions.TemplatePackage.IManagedTemplatePackage!>!>!
Microsoft.TemplateEngine.IDE.Bootstrapper.GetTemplatePackagesAsync(System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyList<Microsoft.TemplateEngine.Abstractions.TemplatePackage.ITemplatePackage!>!>!
Microsoft.TemplateEngine.IDE.Bootstrapper.GetTemplatesAsync(System.Collections.Generic.IEnumerable<System.Func<Microsoft.TemplateEngine.Abstractions.ITemplateInfo!, Microsoft.TemplateEngine.Abstractions.TemplateFiltering.MatchInfo?>!>! filters, bool exactMatchesOnly = true, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyList<Microsoft.TemplateEngine.Abstractions.TemplateFiltering.ITemplateMatchInfo!>!>!
Microsoft.TemplateEngine.IDE.Bootstrapper.GetTemplatesAsync(System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyList<Microsoft.TemplateEngine.Abstractions.ITemplateInfo!>!>!

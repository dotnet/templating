<Project DefaultTargets="Build">
  <Import Project="Version.props" />
  <Import Project="Settings.props" />
  <Import Project="Loc.Settings.targets" />

  <PropertyGroup>
    <CIBuild Condition="'$(CIBuild)' == ''">false</CIBuild>
    <EngineBuild Condition="'$(EngineBuild)' == '' AND '$(CIBuild)' == 'false'">true</EngineBuild>
    <TemplatesBuild Condition="'$(TemplatesBuild)' == '' AND '$(CIBuild)' == 'false'">true</TemplatesBuild>
    <SkipTests Condition="'$(SkipTests)' == ''">false</SkipTests>
    <PB_SkipTests Condition="'$(PB_SkipTests)' == ''">false</PB_SkipTests>
    <New3TargetFramework>netcoreapp1.1</New3TargetFramework>
    <InnerRingTargetFramework>netstandard1.3</InnerRingTargetFramework>
    <OuterRingTargetFramework>netstandard1.5</OuterRingTargetFramework>
    <FullFrameworkTargetFramework>net45</FullFrameworkTargetFramework>
    <FullFrameworkTestTargetFramework>net452</FullFrameworkTestTargetFramework>

    <InnerRingPackTargetFrameworks>$(InnerRingTargetFramework)</InnerRingPackTargetFrameworks>
    <InnerRingPackTargetFrameworks Condition="'$(IsFullFrameworkBuildSupported)' == 'true'">$(InnerRingPackTargetFrameworks);$(FullFrameworkTargetFramework)</InnerRingPackTargetFrameworks>

    <OuterRingPackTargetFrameworks>$(OuterRingTargetFramework)</OuterRingPackTargetFrameworks>
    <OuterRingPackTargetFrameworks Condition="'$(IsFullFrameworkBuildSupported)' == 'true'">$(OuterRingPackTargetFrameworks);$(FullFrameworkTargetFramework)</OuterRingPackTargetFrameworks>

    <SharedTestPackTargetFrameworks>$(OuterRingTargetFramework)</SharedTestPackTargetFrameworks>
    <SharedTestPackTargetFrameworks Condition="'$(IsFullFrameworkBuildSupported)' == 'true'">$(SharedTestPackTargetFrameworks);$(FullFrameworkTestTargetFramework)</SharedTestPackTargetFrameworks>

    <NetCoreAppPackTargets>$(New3TargetFramework)</NetCoreAppPackTargets>
    <NetCoreAppPackTargets Condition="'$(IsFullFrameworkBuildSupported)' == 'true'">$(NetCoreAppPackTargets);$(FullFrameworkBuildTarget)</NetCoreAppPackTargets>
  </PropertyGroup>

  <PropertyGroup>
    <InnerRingProjects>
        src/Microsoft.TemplateEngine.Abstractions/Microsoft.TemplateEngine.Abstractions.csproj;
        src/Microsoft.TemplateEngine.Core.Contracts/Microsoft.TemplateEngine.Core.Contracts.csproj;
        src/Microsoft.TemplateEngine.Utils/Microsoft.TemplateEngine.Utils.csproj;
        src/Microsoft.TemplateEngine.Core/Microsoft.TemplateEngine.Core.csproj;
        src/Microsoft.TemplateEngine.Orchestrator.RunnableProjects/Microsoft.TemplateEngine.Orchestrator.RunnableProjects.csproj
    </InnerRingProjects>

    <OuterRingProjects>
        src/Microsoft.TemplateEngine.Edge/Microsoft.TemplateEngine.Edge.csproj;
        src/Microsoft.TemplateEngine.IDE/Microsoft.TemplateEngine.IDE.csproj;
        test/Microsoft.TemplateEngine.Mocks/Microsoft.TemplateEngine.Mocks.csproj
    </OuterRingProjects>

    <SharedTestProjects>
        test/Microsoft.TemplateEngine.TestHelper/Microsoft.TemplateEngine.TestHelper.csproj
    </SharedTestProjects>

    <CliProjects>
        src/Microsoft.TemplateEngine.Cli/Microsoft.TemplateEngine.Cli.csproj;
    </CliProjects>

    <LocProjects>
        src/Microsoft.TemplateEngine.Cli.Localization/Microsoft.TemplateEngine.Cli.Localization.csproj;
    </LocProjects>

    <PortableSourceProjectsToRestore_both>$(PortableSourceProjectsToPack_netcoreapp11);$(PortableSourceProjectsToPack_fullframework)</PortableSourceProjectsToRestore_both>

    <TestUtilities>test/Microsoft.TemplateEngine.EndToEndTestHarness/Microsoft.TemplateEngine.EndToEndTestHarness.csproj</TestUtilities>

    <TestProjects>
        test/Microsoft.TemplateEngine.Core.UnitTests/Microsoft.TemplateEngine.Core.UnitTests.csproj;
        test/Microsoft.TemplateEngine.Orchestrator.RunnableProjects.UnitTests/Microsoft.TemplateEngine.Orchestrator.RunnableProjects.UnitTests.csproj;
        test/Microsoft.TemplateEngine.Utils.UnitTests/Microsoft.TemplateEngine.Utils.UnitTests.csproj;
        test/Microsoft.TemplateEngine.Cli.UnitTests/Microsoft.TemplateEngine.Cli.UnitTests.csproj;
        test/Microsoft.TemplateEngine.Edge.UnitTests/Microsoft.TemplateEngine.Edge.UnitTests.csproj;
        test/dotnet-new3.UnitTests/dotnet-new3.UnitTests.csproj
    </TestProjects>
  </PropertyGroup>

  <Target Name="BuildForCli">
    <MakeDir Directories="$(ArtifactsDir);$(PackageOutputPath);$(TemplatesOutputPath);$(DevPath)" />
    <CallTarget Targets="CollectGitInfo" />

    <!-- Build the inner ring (abstractions, core, core contracts, etc.) -->
    <MSBuild Projects="$(InnerRingProjects)" Targets="Restore;Build"
             Properties="TargetFramework=$(InnerRingTargetFramework);Configuration=$(Configuration)"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />

    <MSBuild Projects="$(InnerRingProjects)" Targets="Pack"
             Properties="TargetFrameworks=$(InnerRingPackTargetFrameworks);Configuration=$(Configuration);PackageOutputPath=$(PackageOutputPath);NoBuild=true;IncludeSymbols=true"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />

    <!-- Build Edge (the only outerring component that CLI depends on) -->
    <MSBuild Projects="src/Microsoft.TemplateEngine.Edge/Microsoft.TemplateEngine.Edge.csproj" Targets="Restore;Build"
             Properties="TargetFramework=$(OuterRingTargetFramework);Configuration=$(Configuration)"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />

    <MSBuild Projects="src/Microsoft.TemplateEngine.Edge/Microsoft.TemplateEngine.Edge.csproj" Targets="Pack"
             Properties="TargetFrameworks=$(OuterRingPackTargetFrameworks);Configuration=$(Configuration);PackageOutputPath=$(PackageOutputPath);NoBuild=true;IncludeSymbols=true"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />

    <!-- Build projects that only build for the dotnet CLI -->
    <MSBuild Projects="$(CliProjects)" Targets="Restore;Build"
             Properties="TargetFramework=$(OuterRingTargetFramework);Configuration=$(Configuration);PackageOutputPath=$(PackageOutputPath);NoBuild=true"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />

    <MSBuild Projects="$(CliProjects)" Targets="Pack"
             Properties="TargetFramework=$(OuterRingTargetFramework);Configuration=$(Configuration);PackageOutputPath=$(PackageOutputPath);NoBuild=true;IncludeSymbols=true"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />

    <!-- Build templates -->
    <MSBuild Projects="template_feed/Template.proj" Targets="Build"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />
  </Target>

  <Target Name="Build">

    <MakeDir Directories="$(ArtifactsDir);$(PackageOutputPath);$(TemplatesOutputPath);$(DevPath)" />
    <CallTarget Targets="CollectGitInfo" />

    <!-- Build the inner ring (abstractions, core, core contracts, etc.) -->
    <MSBuild Projects="$(InnerRingProjects)" Targets="Restore;Build"
             Condition="'$(EngineBuild)' == 'true'"
             Properties="TargetFramework=$(InnerRingTargetFramework);Configuration=$(Configuration)"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />

    <MSBuild Projects="$(InnerRingProjects)" Targets="Restore;Build"
             Condition="'$(IsFullFrameworkBuildSupported)' == 'true' AND '$(EngineBuild)' == 'true'"
             Properties="TargetFramework=$(FullFrameworkTargetFramework);Configuration=$(Configuration)"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />


    <!-- Build the outer ring (edge, mocks, etc.) -->
    <MSBuild Projects="$(OuterRingProjects)" Targets="Restore;Build"
             Condition="'$(EngineBuild)' == 'true'"
             Properties="TargetFramework=$(OuterRingTargetFramework);Configuration=$(Configuration)"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />

    <MSBuild Projects="$(OuterRingProjects)" Targets="Restore;Build"
             Condition="'$(IsFullFrameworkBuildSupported)' == 'true' AND '$(EngineBuild)' == 'true'"
             Properties="TargetFramework=$(FullFrameworkTargetFramework);Configuration=$(Configuration)"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />

    <MSBuild Projects="$(SharedTestProjects)" Targets="Restore;Build"
             Condition="'$(IsFullFrameworkBuildSupported)' == 'true' AND '$(EngineBuild)' == 'true'"
             Properties="TargetFramework=$(FullFrameworkTestTargetFramework);Configuration=$(Configuration)"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />
             
    <!-- Build the shared test projects (test helper, etc.) -->
    <MSBuild Projects="$(SharedTestProjects)" Targets="Restore;Build"
             Condition="'$(EngineBuild)' == 'true'"
             Properties="TargetFramework=$(OuterRingTargetFramework);Configuration=$(Configuration)"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />
             
    <!-- Build projects that only build for the dotnet CLI -->
    <MSBuild Projects="$(CliProjects)" Targets="Restore;Build"
             Condition="'$(EngineBuild)' == 'true'"
             Properties="TargetFramework=$(OuterRingTargetFramework);Configuration=$(Configuration);PackageOutputPath=$(PackageOutputPath);NoBuild=true"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />

    <!-- Build templates -->
    <MSBuild Projects="template_feed/Template.proj" Targets="Build"
             Condition="'$(TemplatesBuild)' == 'true'"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />

    <!-- Build new3 -->
    <MSBuild Projects="src/dotnet-new3/dotnet-new3.csproj" Targets="Restore"
             Condition="'$(EngineBuild)' == 'true'"
             Properties="TargetFramework=$(New3TargetFramework);Configuration=$(Configuration);PublishDir=$(DevPath);RestoreRecursive=false"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />
    
    <!-- Sign the Assemblies before packing -->
    
    <MSBuild Condition="'$(PB_SignType)' == 'real' or '$(PB_SignType)' == 'test'"
             Projects="build\Sign.csproj"
             Targets="Restore"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />
             
    <MSBuild Condition="'$(PB_SignType)' == 'real' or '$(PB_SignType)' == 'test'"
             Projects="sign.proj"
             Targets="PostCompileSign"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />
             
    <!-- Pack -->
    <MSBuild Projects="$(InnerRingProjects)" Targets="Pack"
             Condition="'$(EngineBuild)' == 'true'"
             Properties="TargetFrameworks=$(InnerRingPackTargetFrameworks);Configuration=$(Configuration);PackageOutputPath=$(PackageOutputPath);NoBuild=true;IncludeSymbols=true"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />
             
    <MSBuild Projects="$(OuterRingProjects)" Targets="Pack"
             Condition="'$(EngineBuild)' == 'true'"
             Properties="TargetFrameworks=$(OuterRingPackTargetFrameworks);Configuration=$(Configuration);PackageOutputPath=$(PackageOutputPath);NoBuild=true;IncludeSymbols=true"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />			 

    <MSBuild Projects="$(CliProjects)" Targets="Pack"
             Condition="'$(EngineBuild)' == 'true'"
             Properties="TargetFramework=$(OuterRingTargetFramework);Configuration=$(Configuration);PackageOutputPath=$(PackageOutputPath);NoBuild=true;IncludeSymbols=true"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />
             
    <MSBuild Projects="$(SharedTestProjects)" Targets="Pack"
             Condition="'$(EngineBuild)' == 'true'"
             Properties="TargetFrameworks=$(SharedTestPackTargetFrameworks);Configuration=$(Configuration);PackageOutputPath=$(PackageOutputPath);NoBuild=true;IncludeSymbols=true"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />

    <MSBuild Projects="src/dotnet-new3/dotnet-new3.csproj" Targets="Publish"
             Condition="'$(EngineBuild)' == 'true'"
             Properties="TargetFramework=$(New3TargetFramework);Configuration=$(Configuration);PublishDir=$(DevPath);RestoreRecursive=false"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />			 

  </Target>
 
  <Target Name="SignPackages">
    <!-- Sign the newly packed files -->
    <MSBuild Condition="'$(PB_SignType)' == 'real' or '$(PB_SignType)' == 'test'"
             Projects="sign.proj"
             Targets="PostPackSign"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />
  </Target>
  
  <Target Name="Test" Condition="'$(PB_SkipTests)' != 'true'">
             
    <!-- Build the test harness -->
    <MSBuild Projects="$(TestUtilities)" Targets="Restore;Build"
             Condition="'$(EngineBuild)' == 'true'"
             Properties="TargetFramework=$(New3TargetFramework);Configuration=$(Configuration)"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />

    <!-- Build tests -->
    <MSBuild Projects="$(TestProjects)" Targets="Restore;Build"
             Condition="'$(EngineBuild)' == 'true'"
             Properties="TargetFramework=$(New3TargetFramework);Configuration=$(Configuration)"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />

    <!-- Run tests -->
    <MSBuild Projects="$(TestProjects)" Targets="VSTest"
             Condition="'$(EngineBuild)' == 'true' AND '$(SkipTests)' != 'true'"
             Properties="TargetFramework=$(New3TargetFramework);Configuration=$(Configuration);VSTestLogger=trx"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />

    </Target>
    
  <!-- Localization -->
  <Target Name="BuildLocalized" DependsOnTargets="SetLanguages" Condition="Exists('.tools\loc\loc.proj')">
    <MSBuild Projects=".tools\loc\loc.proj" Targets="Build"
             Properties="Lang=%(Languages.Identity)" />

    <!-- Strong name the localized assemblies-->
    <MSBuild Projects="sign.proj"
            Targets="SNSignLocResources"
            RunEachTargetSeparately="true" StopOnFirstFailure="true" />
             
    <MSBuild Condition="'$(PB_SignType)' == 'real' or '$(PB_SignType)' == 'test'"
             Projects="sign.proj"
             Targets="PostCompileLocSign"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />
             
    <MSBuild Projects="$(LocProjects)" Targets="Restore;Build;Pack"
             Properties="Configuration=$(Configuration);PackageOutputPath=$(PackageOutputPath)"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />
  </Target>
    
  <Target Name="SignLocPackages">
    <!-- Sign the newly packed files -->
    <MSBuild Condition="'$(PB_SignType)' == 'real' or '$(PB_SignType)' == 'test'"
             Projects="sign.proj"
             Targets="PostPackLocSign"
             RunEachTargetSeparately="true" StopOnFirstFailure="true" />
  </Target>

  <Target Name="SetLanguages">
    <ItemGroup>
      <Languages Remove="@(Languages)" />
    </ItemGroup>

    <ItemGroup>
      <Languages Include="$(AllLanguages)" Condition="'$(Lang)' == 'all'" />
      <Languages Include="$(Lang)" Condition="'$(Lang)' != 'all'" />
      <Languages Include="ploc" Condition="'$(Lang)' == ''" />
    </ItemGroup>
  </Target>

</Project>
